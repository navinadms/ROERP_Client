
Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Drawing
Imports System.Linq
Imports System.Text
Imports System.Windows.Forms
Imports System.Data.SqlClient
Public Class AddressForm
    Dim linq_obj As New RoErpDataContext(System.Configuration.ConfigurationManager.AppSettings("constr").ToString())
    Dim Address_ID As Integer
    Dim dataAddress As DataTable

    Public Sub New()
        ' This call is required by the designer.
        InitializeComponent()
        AutoCompated_Text()
        ddlEnqType_Bind()
        ddlCategory_Bind()
        ddlSubCategory_Bind()
        ddlEnqStatus_Bind()
        GvAddress_Bind()
        If (Address_ID <= 0) Then
            Button_Status()
            btnSubmit.Visible = True
        Else
            Button_Status()
            btnUpdate.Visible = True
        End If
        RavSoft.CueProvider.SetCue(txtEmail1, "Email 1")
        RavSoft.CueProvider.SetCue(txtEmail2, "Email 2")
        ddlFilter.SelectedIndex = 0
        getPageRight()
    End Sub
    Public Sub AutoCompated_Text()
        getAutoCompleteData("Name")
        getAutoCompleteData("City")
        getAutoCompleteData("State")
        getAutoCompleteData("Area")
        getAutoCompleteData("District")
        getAutoCompleteData("EnqNo")

        'Dim Getadd = linq_obj.SP_Get_AddressList().ToList()
        'For Each iteam As SP_Get_AddressListResult In Getadd
        '    txtName.AutoCompleteCustomSource.Add(iteam.Name)
        '    txtArea.AutoCompleteCustomSource.Add(iteam.Area)
        '    txtCity.AutoCompleteCustomSource.Add(iteam.City)
        '    txtState.AutoCompleteCustomSource.Add(iteam.State)
        '    txtDistrict.AutoCompleteCustomSource.Add(iteam.District)
        '    'Search Filter
        '    txtSearchName.AutoCompleteCustomSource.Add(iteam.Name)
        '    txtSearchCity.AutoCompleteCustomSource.Add(iteam.City)
        '    txtSearchDistrict.AutoCompleteCustomSource.Add(iteam.District)
        'Next
    End Sub

    Public Sub ddlEnqType_Bind()
        ddlEnqType.Items.Clear()
        Dim Enq = linq_obj.SP_Get_EnqTypeList().ToList()
        ddlEnqType.DataSource = Enq
        ddlEnqType.DisplayMember = "EnqType"
        ddlEnqType.ValueMember = "Pk_EnqTypeID"
        ddlEnqType.AutoCompleteMode = AutoCompleteMode.Append
        ddlEnqType.DropDownStyle = ComboBoxStyle.DropDownList
        ddlEnqType.AutoCompleteSource = AutoCompleteSource.ListItems
    End Sub

    Public Sub ddlCategory_Bind()
        ddlCategory.Items.Clear()
        Dim category = linq_obj.SP_Get_AddressCategory().ToList()
        ddlCategory.DataSource = category
        ddlCategory.DisplayMember = "Category"
        ddlCategory.ValueMember = "Pk_AddressCategoryID"
        ddlCategory.AutoCompleteMode = AutoCompleteMode.Append
        ddlCategory.DropDownStyle = ComboBoxStyle.DropDownList
        ddlCategory.AutoCompleteSource = AutoCompleteSource.ListItems
        For Each iteam As SP_Get_AddressCategoryResult In category
            txtSearchCategory.AutoCompleteCustomSource.Add(iteam.Category)
        Next
    End Sub
    Public Sub getPageRight()
        Try
            Dim dv As New DataTable
            Dim dataView As DataView

            Dim Class1 As New Class1
            Dim RowCount As Integer
            Dim statusCheck As Boolean = False

            Dim strName As String = ""

            dataView = Class1.global.UserPermissionDataset.Tables(0).DefaultView
            dataView.RowFilter = "([DetailName] like 'Address')"

            If (dataView.Count > 0) Then


                dv = dataView.ToTable()

                If (dv.Rows(0)("Type") = 1) Then

                Else
                    For RowCount = 0 To dv.Rows.Count - 1
                        If (dv.Rows(RowCount)("IsAdd") = True) Then
                            btnSubmit.Enabled = True
                        Else
                            btnSubmit.Enabled = False
                        End If
                        If (dv.Rows(RowCount)("IsUpdate") = True) Then
                            btnUpdate.Enabled = True
                        Else
                            btnUpdate.Enabled = False
                        End If
                        If (dv.Rows(RowCount)("IsDelete") = True) Then
                            btnDelete.Enabled = True
                        Else
                            btnDelete.Enabled = False
                        End If
                        If (dv.Rows(RowCount)("IsPrint") = True) Then

                        Else


                        End If

                    Next
                End If

            End If
        Catch ex As Exception
            MessageBox.Show(ex.Message)
        End Try

    End Sub

    Public Sub ddlSubCategory_Bind()

        ddlSubcategory.Items.Clear()

        Dim subcategory = linq_obj.SP_Get_AddSubCategory().ToList()

        ddlSubcategory.DataSource = subcategory
        ddlSubcategory.DisplayMember = "SubCategory"
        ddlSubcategory.ValueMember = "Pk_AddressSubID"
        ddlSubcategory.AutoCompleteMode = AutoCompleteMode.Append
        ddlSubcategory.DropDownStyle = ComboBoxStyle.DropDownList
        ddlSubcategory.AutoCompleteSource = AutoCompleteSource.ListItems





    End Sub
    Public Sub ddlEnqStatus_Bind()

        ddlEnqStatus.Items.Clear()
        Dim EnqStatus = linq_obj.SP_Get_EnqStatusList().ToList()
        ddlEnqStatus.DataSource = EnqStatus
        ddlEnqStatus.DisplayMember = "EnqStatus"
        ddlEnqStatus.ValueMember = "Pk_EnqStatus"
        ddlEnqStatus.AutoCompleteMode = AutoCompleteMode.Append
        ddlEnqStatus.DropDownStyle = ComboBoxStyle.DropDownList
        ddlEnqStatus.AutoCompleteSource = AutoCompleteSource.ListItems
    End Sub

    Public Sub GvAddress_Bind()
        Dim dt As New DataTable
        dt.Columns.Add("PKID")
        dt.Columns.Add("EnqNo")

        dt.Columns.Add("Name")
        Try
            Dim getdata = linq_obj.SP_Get_AddressListForQuatation(0).ToList()
            If (getdata.Count > 0) Then


                For Each item As SP_Get_AddressListForQuatationResult In getdata
                    dt.Rows.Add(item.Pk_AddressID, item.EnqNo, item.Name)
                Next
                GvAddress.DataSource = dt
                GvAddress.Columns(0).Visible = False
                'Dim entryno = linq_obj.SP_Get_AddressList().Count()

                txtEntryNo.Text = getdata(0).Pk_AddressID + 1
                If (txtEntryNo.Text = "") Then
                    txtEntryNo.Text = 1
                End If
            Else
                If (txtEntryNo.Text = "") Then
                    txtEntryNo.Text = 1
                End If
            End If
        Catch ex As Exception

        End Try

    End Sub
    Public Sub Button_Status()
        btnSubmit.Visible = False
        btnUpdate.Visible = False
    End Sub

    Private Sub btnSubmit_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnSubmit.Click
        Try
            If (txtName.Text.Trim() <> "" AndAlso txtEnqNo.Text.Trim() <> "") Then
                txtEnqType.Text = ddlSubcategory.Text
                txtEnqAttendBy.Text = txtReference2.Text
                Dim res As Integer

                res = linq_obj.SP_Insert_Update_Address_Master(0, ddlEnqType.SelectedValue, txtEnqNo.Text, ddlCategory.SelectedValue, ddlSubcategory.SelectedValue, txtName.Text, txtAddress.Text, txtArea.Text, txtCity.Text, txtPincode.Text, txtTaluka.Text, txtDistrict.Text, txtState.Text, txtContactPerson.Text, txtLandlineNo.Text, txtmobileno.Text, txtEmail.Text, txtEmail1.Text, txtEmail2.Text, txtRemark.Text, txtEnqDate.Value, txtCreateDate.Value, ddlEnqStatus.SelectedValue, txtReference.Text, txtReference2.Text, txtEnqType.Text, txtEnqAttendBy.Text, txtenquiryfor.Text, txtCapacity.Text, txtDelAddress.Text, txtDelArea.Text, txtDelCity.Text, txtDelPincode.Text, txtDelTaluka.Text, txtDelDistrict.Text, txtDelState.Text)
                If (res > 0) Then



                    'Auto State Allotment
                    If (ddlEnqStatus.Text = "Enq") Then


                        If (txtState.Text.Trim <> "" Or txtState.Text.Trim() <> "-") Then
                            Dim data = linq_obj.SP_Get_AllotedStateTeam(txtState.Text.Trim()).ToList()

                            If (data.Count > 0) Then
                                linq_obj.SP_Tbl_UserAllotmentDetail_Insert(res, data(0).Fk_UserId, data(0).Fk_TeamId)

                                linq_obj.SubmitChanges()

                                GvAddress_Bind()
                                SetClean()

                                MessageBox.Show("Submit Sucessfully.....")
                                txtEnqNo.Focus()
                            End If

                        End If

                    End If
                Else
                    MessageBox.Show("Error In Insertion.....")
                End If

            Else
                MessageBox.Show("Required Enq Number Or Name...")
            End If


        Catch ex As Exception
            MessageBox.Show(ex.Message)
        End Try
    End Sub
    Public Sub SetClean()
        txtEnqNo.Text = ""
        txtName.Text = ""
        txtAddress.Text = ""
        txtArea.Text = ""
        txtCity.Text = ""
        txtPincode.Text = ""
        txtTaluka.Text = ""
        txtDistrict.Text = ""
        txtState.Text = ""
        txtEmail1.Text = ""
        txtEmail2.Text = ""
        txtDelAddress.Text = ""
        txtDelArea.Text = ""
        txtDelCity.Text = ""
        txtDelPincode.Text = ""
        txtDelTaluka.Text = ""
        txtDelDistrict.Text = ""
        txtDelState.Text = ""
        txtContactPerson.Text = ""
        txtLandlineNo.Text = ""
        txtEmail.Text = ""
        txtRemark.Text = ""
        txtEnqDate.Text = ""
        txtCreateDate.Text = ""
        txtmobileno.Text = ""
        txtReference.Text = ""
        txtReference2.Text = ""
        txtEnqType.Text = ""
        txtEnqAttendBy.Text = ""
        txtenquiryfor.Text = ""
        txtCapacity.Text = ""

        Address_ID = 0
        txtState.SelectedIndex = 0
        txtDelState.SelectedIndex = 0

    End Sub

    Private Sub btnUpdate_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnUpdate.Click
        Try
            If (txtName.Text.Trim() <> "" AndAlso txtEnqNo.Text.Trim() <> "") Then
                txtEnqType.Text = ddlSubcategory.Text
                txtEnqAttendBy.Text = txtReference2.Text

                linq_obj.SP_Insert_Update_Address_Master(Address_ID, ddlEnqType.SelectedValue, txtEnqNo.Text, ddlCategory.SelectedValue, ddlSubcategory.SelectedValue, txtName.Text, txtAddress.Text, txtArea.Text, txtCity.Text, txtPincode.Text, txtTaluka.Text, txtDistrict.Text, txtState.Text, txtContactPerson.Text, txtLandlineNo.Text, txtmobileno.Text, txtEmail.Text, txtEmail1.Text, txtEmail2.Text, txtRemark.Text, txtEnqDate.Value, txtCreateDate.Value, ddlEnqStatus.SelectedValue, txtReference.Text, txtReference2.Text, txtEnqType.Text, txtEnqAttendBy.Text, txtenquiryfor.Text, txtCapacity.Text, txtDelAddress.Text, txtDelArea.Text, txtDelCity.Text, txtDelPincode.Text, txtDelTaluka.Text, txtDelDistrict.Text, txtDelState.Text)

                If (ddlEnqStatus.Text = "Enq") Then
                    'Auto State Allotment
                    If (txtState.Text.Trim <> "" Or txtState.Text.Trim() <> "-") Then
                        Dim data = linq_obj.SP_Get_AllotedStateTeam(txtState.Text.Trim()).ToList()

                        If (data.Count > 0) Then
                            Dim res = linq_obj.SP_Tbl_UserAllotmentDetail_Insert(Address_ID, data(0).Fk_UserId, data(0).Fk_TeamId)
                            If (res > 0) Then
                                linq_obj.SubmitChanges()
                                GvAddress_Bind()
                                SetClean()
                                txtEnqNo.Focus()
                            Else
                                MessageBox.Show("Not Alloted Sucessfully.....")
                            End If

                        End If

                    End If
                End If


                linq_obj.SubmitChanges()
                GvAddress_Bind()
                SetClean()
                MessageBox.Show("Update Sucessfully.....")
                txtEnqNo.Focus()
            Else
                MessageBox.Show("Required Enq Number Or Name...")
            End If
        Catch ex As Exception
            MessageBox.Show(ex.Message)
        End Try
    End Sub

    Public Sub bindData()
        Try
            'lblHeader.Text = "Edit Address"
            'Dim id As Integer
            Button_Status()
            btnUpdate.Visible = True
            Dim address_get = linq_obj.SP_Get_AddressListById(Address_ID).ToList()
            For Each item As SP_Get_AddressListByIdResult In address_get
                ddlEnqType.SelectedValue = item.FK_EnqTypeID
                ddlCategory.SelectedValue = item.FK_CategoryID
                ddlSubcategory.SelectedValue = item.FK_SubCategoryID
                txtEnqNo.Text = item.EnqNo
                txtName.Text = item.Name
                txtAddress.Text = item.Address
                txtArea.Text = item.Area
                txtCity.Text = item.City
                txtPincode.Text = item.Pincode
                txtTaluka.Text = item.Taluka
                txtDistrict.Text = item.District
                txtState.SelectedValue = item.State
                txtContactPerson.Text = item.ContactPerson
                txtLandlineNo.Text = item.LandlineNo
                txtmobileno.Text = item.MobileNo
                txtEmail.Text = item.EmailID
                txtRemark.Text = item.Remark
                txtEnqDate.Text = IIf(item.EnqDate Is Nothing, DateTime.Now, item.EnqDate)
                txtCreateDate.Text = IIf(item.CreateDate Is Nothing, DateTime.Now, item.CreateDate)

                ' id = item.EnqStatus
                ddlEnqStatus.SelectedValue = Convert.ToInt32(item.EnqStatus)


                txtEmail1.Text = item.EmailID1
                txtEmail2.Text = item.EmailID2
                txtDelAddress.Text = item.DeliveryAddress
                txtDelArea.Text = item.DeliveryArea
                txtDelState.Text = item.DeliveryState
                txtDelDistrict.Text = item.DeliveryDistrict
                txtDelCity.Text = item.DeliveryCity
                txtDelPincode.Text = item.DeliveryPincode
                txtDelTaluka.Text = item.DeliveryTaluka
                txtReference.Text = item.Reference1
                txtReference2.Text = item.Reference2
                txtEnqType.Text = item.TypeOfEnq
                txtCapacity.Text = item.CapacityHour
                txtEnqAttendBy.Text = item.EnqAttendBy
                txtenquiryfor.Text = item.EnqFor

            Next

        Catch ex As Exception
            MessageBox.Show(ex.Message)
        End Try

    End Sub

    Private Sub GvAddress_DoubleClick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles GvAddress.DoubleClick
        Try
            Address_ID = Convert.ToInt32(Me.GvAddress.SelectedCells(0).Value)
            bindData()
        Catch ex As Exception
            MessageBox.Show(ex.Message)
        End Try
    End Sub

    Private Sub btnCancel_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCancel.Click
        SetClean()
        Button_Status()
        btnSubmit.Visible = True
        ddlCategory.Focus()
        'lblHeader.Text = "Add Address"
    End Sub



    Private Sub btnAddCategory_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnAddCategory.Click

        txtSearchAddCategory.Text = txtSearchAddCategory.Text + txtSearchCategory.Text + ","
        txtSearchCategory.Text = ""



    End Sub

    Private Sub btnclearCategory_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnclearCategory.Click
        txtSearchAddCategory.Text = ""
    End Sub

    Private Sub txtName_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtName.TextChanged

    End Sub

    Private Sub GvAddress_PreviewKeyDown(ByVal sender As System.Object, ByVal e As System.Windows.Forms.PreviewKeyDownEventArgs) Handles GvAddress.PreviewKeyDown
        Try
            If (e.KeyCode = Keys.Down) Then
                Address_ID = Convert.ToInt64(Me.GvAddress.Rows(Me.GvAddress.CurrentRow.Index + 1).Cells(0).Value)
                bindData()
            Else
                Address_ID = Convert.ToInt64(Me.GvAddress.Rows(Me.GvAddress.CurrentRow.Index - 1).Cells(0).Value)
                bindData()
            End If


        Catch ex As Exception
            MessageBox.Show(ex.Message)
        End Try

    End Sub

    Public Sub getAutoCompleteData(ByVal strType As String)
        Select Case strType.Trim()
            Case "Name"
                txtName.AutoCompleteCustomSource.Clear()
                Dim data = linq_obj.SP_Get_AddressListAutoComplete("Name").ToList()
                For Each iteam As SP_Get_AddressListAutoCompleteResult In data
                    txtName.AutoCompleteCustomSource.Add(iteam.Result)
                    txtSearchName.AutoCompleteCustomSource.Add(iteam.Result)
                Next
            Case "City"
                txtCity.AutoCompleteCustomSource.Clear()
                txtSearchCity.AutoCompleteCustomSource.Clear()
                Dim data = linq_obj.SP_Get_AddressListAutoComplete("City").ToList()
                For Each iteam As SP_Get_AddressListAutoCompleteResult In data
                    txtCity.AutoCompleteCustomSource.Add(iteam.Result)

                Next

                For Each iteam As SP_Get_AddressListAutoCompleteResult In data

                    txtSearchCity.AutoCompleteCustomSource.Add(iteam.Result)
                Next
            Case "Area"
                txtArea.AutoCompleteCustomSource.Clear()
                Dim data = linq_obj.SP_Get_AddressListAutoComplete("Area").ToList()
                For Each iteam As SP_Get_AddressListAutoCompleteResult In data
                    txtArea.AutoCompleteCustomSource.Add(iteam.Result)
                Next
            Case "State"
                txtState.Items.Clear()
                txtDelState.Items.Clear()

                txtState.DataSource = Nothing
                txtDelState.DataSource = Nothing

                Dim datatable As New DataTable
                datatable.Columns.Add("Result")


                Dim data = linq_obj.SP_Get_AddressListAutoComplete("State").ToList()
                For Each item As SP_Get_AddressListAutoCompleteResult In data
                    datatable.Rows.Add(item.Result)
                Next
                Dim newRow As DataRow = datatable.NewRow()

                newRow(0) = "Select"
                datatable.Rows.InsertAt(newRow, 0)
                txtState.DataSource = datatable
                txtState.DisplayMember = "Result"
                txtState.ValueMember = "Result"
                txtState.AutoCompleteMode = AutoCompleteMode.Append
                txtState.DropDownStyle = ComboBoxStyle.DropDownList
                txtState.AutoCompleteSource = AutoCompleteSource.ListItems


                Dim datatablenew As New DataTable
                datatablenew.Columns.Add("Result")


                Dim dataDel = linq_obj.SP_Get_AddressListAutoComplete("State").ToList()
                For Each item As SP_Get_AddressListAutoCompleteResult In data
                    datatablenew.Rows.Add(item.Result)
                Next
                Dim newRow1 As DataRow = datatablenew.NewRow()

                newRow1(0) = "Select"
                datatablenew.Rows.InsertAt(newRow1, 0)

                txtDelState.DataSource = datatablenew
                txtDelState.DisplayMember = "Result"
                txtDelState.ValueMember = "Result"
                txtDelState.AutoCompleteMode = AutoCompleteMode.Append
                txtDelState.DropDownStyle = ComboBoxStyle.DropDownList
                txtDelState.AutoCompleteSource = AutoCompleteSource.ListItems

            Case "District"
                txtSearchDistrict.AutoCompleteCustomSource.Clear()
                txtDistrict.AutoCompleteCustomSource.Clear()
                Dim data = linq_obj.SP_Get_AddressListAutoComplete("District").ToList()
                For Each iteam As SP_Get_AddressListAutoCompleteResult In data
                    txtDistrict.AutoCompleteCustomSource.Add(iteam.Result)
                    txtSearchDistrict.AutoCompleteCustomSource.Add(iteam.Result)
                Next
            Case "EnqNo"
                TxtSearchEnqNo.AutoCompleteCustomSource.Clear()

                Dim data = linq_obj.SP_Get_AddressListAutoComplete("EnqNo").ToList()
                For Each iteam As SP_Get_AddressListAutoCompleteResult In data
                    TxtSearchEnqNo.AutoCompleteCustomSource.Add(iteam.Result)

                Next
        End Select
    End Sub

    Private Sub txtEnqNo_Leave(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtEnqNo.Leave
        Dim resStatus As Integer = linq_obj.SP_CheckEnqNo(txtEnqNo.Text.Trim())
        If (resStatus = 1) Then
            btnSubmit.Visible = True
        Else
            MessageBox.Show("Enquiry Number Already Exists.")
            btnSubmit.Visible = False
        End If

    End Sub

    Private Sub btnDelete_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnDelete.Click
        Try
            Dim result As DialogResult = MessageBox.Show("Are You Sure Delete Address?", "Important Message", MessageBoxButtons.YesNo, MessageBoxIcon.Exclamation)
            If result = DialogResult.Yes Then
                linq_obj.SP_Delete_Address(Address_ID)
                linq_obj.SubmitChanges()
                MessageBox.Show("Successfully Deleted...")
                SetClean()
                GvAddress_Bind()
                Button_Status()
                btnSubmit.Visible = True
                ddlCategory.Focus()
            Else

            End If
        Catch ex As Exception
            MessageBox.Show(ex.Message)
        End Try
    End Sub

    Private Sub btnLabel_Click(ByVal sender As System.Object, ByVal e As System.EventArgs)

    End Sub

    Private Sub btnList_Click(ByVal sender As System.Object, ByVal e As System.EventArgs)

    End Sub

    Private Sub btnSearch_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnSearch.Click
        Dim criteria As String
        criteria = " Where Address_Master.EnqStatus=1 and "
        If TxtSearchEnqNo.Text.Trim() <> "" Then
            criteria = criteria + " EnqNo like '%" + TxtSearchEnqNo.Text + "%' and"
        End If
        If txtSearchName.Text.Trim() <> "" Then
            criteria = criteria + " Name like '%" + txtSearchName.Text + "%' and"
        End If
        If txtSearchState.Text.Trim() <> "" Then
            criteria = criteria + " State like '%" + txtSearchState.Text + "%' and"
        End If
        If txtSearchDistrict.Text.Trim() <> "" Then
            criteria = criteria + " District like '%" + txtSearchDistrict.Text + "%' and"
        End If
        If txtSearchCity.Text.Trim() <> "" Then
            criteria = criteria + " City like '%" + txtSearchCity.Text + "%' and"
        End If
        If ddlFilter.Text = "State Excluding Gujarat" Then
            criteria = criteria + " State<>'Gujarat' and"
        End If
        If ddlFilter.Text = "Gujarat Excluding Ahmedabad" Then
            criteria = criteria + " City<>'Ahmedabad' and"
        End If

        If txtSearchAddCategory.Text.Trim() <> "" Then
            Dim strArray() As String
            strArray = txtSearchAddCategory.Text.Split(",")
            For i As Integer = 0 To strArray.Length - 2
                If strArray.ToString().Trim() <> "" Then
                    criteria = criteria + " Category like '" + strArray(i) + "' and"
                End If

            Next
        End If

        If criteria = " Where Address_Master.EnqStatus=1 and " Then
            criteria = ""
        End If

        If (criteria.Length > 0) Then
            criteria = criteria.ToString().Substring(0, criteria.Length - 3)
        End If

        Dim cmd As New SqlCommand
        cmd.CommandText = "SP_Search_AddressMaster"
        cmd.Parameters.Add("@criteria", SqlDbType.VarChar).Value = criteria
        Dim objclass As New Class1

        Dim ds As New DataSet
        ds = objclass.GetSearchData(cmd)
        If ds.Tables(1).Rows.Count < 1 Then
            MessageBox.Show("Record Not Found", "No Records", MessageBoxButtons.OK, MessageBoxIcon.Information)
        Else
            Dim dt As New DataTable
            dt.Columns.Add("PKID")
            dt.Columns.Add("EnqNo")

            dt.Columns.Add("Name")

            For index = 0 To ds.Tables(1).Rows.Count - 1
                dt.Rows.Add(ds.Tables(1).Rows(index)("Pk_AddressID"), ds.Tables(1).Rows(index)("EnqNo"), ds.Tables(1).Rows(index)("Name"))
            Next

            GvAddress.DataSource = dt
        End If
        txtSearchAddCategory.Text = ""
        txtSearchCategory.Text = ""
        txtSearchCity.Text = ""
        txtSearchDistrict.Text = ""
        TxtSearchEnqNo.Text = ""
        txtSearchName.Text = ""
        txtSearchState.Text = ""
        ddlFilter.SelectedIndex = 0

    End Sub

    Private Sub AddressForm_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
        For Each control As Control In Me.Controls
            ' The textbox control.
            Dim parentControl As New Control


            If (control.GetType() Is GetType(GroupBox)) Then
                Dim grpBox As GroupBox = TryCast(control, GroupBox)
                parentControl = grpBox
            ElseIf (control.GetType() Is GetType(TabControl)) Then
                Dim TC As TabControl = TryCast(control, TabControl)
                parentControl = TC
            Else
                Try
                    parentControl = control
                Catch ex As Exception

                End Try

            End If

            For Each subcontrol As Control In parentControl.Controls
                If (subcontrol.GetType() Is GetType(TextBox)) Then
                    Dim textBox As TextBox = TryCast(subcontrol, TextBox)

                    ' If not null, set the handler.
                    If textBox IsNot Nothing Then
                        AddHandler textBox.Enter, AddressOf TextBox_Enter
                        AddHandler textBox.Leave, AddressOf TextBox_Leave
                    End If
                End If

                ' Set the handler.
            Next

            ' Set the handler.
        Next
    End Sub

    Private Sub TextBox_Enter(ByVal sender As System.Object, ByVal e As System.EventArgs)
        Dim txt As New TextBox()
        txt = DirectCast(sender, TextBox)

        txt.BackColor = Color.LightYellow
    End Sub

    Private Sub TextBox_Leave(ByVal sender As System.Object, ByVal e As System.EventArgs)
        Dim txt As New TextBox()
        txt = DirectCast(sender, TextBox)

        txt.BackColor = Color.White
    End Sub

    Private Sub btnPrint_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnPrint.Click
        'Dim criteria As String
        'criteria = " and "
        'If TxtSearchEnqNo.Text.Trim() <> "" Then
        '    criteria = criteria + " EnqNo like '%" + TxtSearchEnqNo.Text + "%' and"
        'End If
        'If txtSearchName.Text.Trim() <> "" Then
        '    criteria = criteria + " Name like '%" + txtSearchName.Text + "%' and"
        'End If
        'If txtSearchState.Text.Trim() <> "" Then
        '    criteria = criteria + " State like '%" + txtSearchState.Text + "%' and"
        'End If
        'If txtSearchDistrict.Text.Trim() <> "" Then
        '    criteria = criteria + " District like '%" + txtSearchDistrict.Text + "%' and"
        'End If
        'If txtSearchCity.Text.Trim() <> "" Then
        '    criteria = criteria + " City like '%" + txtSearchCity.Text + "%' and"
        'End If
        'If ddlFilter.Text = "State Excluding Gujarat" Then
        '    criteria = criteria + " State<>'Gujarat' and"
        'End If
        'If ddlFilter.Text = "Gujarat Excluding Ahmedabad" Then
        '    criteria = criteria + " City<>'Ahmedabad' and"
        'End If

        'If txtSearchAddCategory.Text.Trim() <> "" Then
        '    Dim strArray() As String
        '    strArray = txtSearchAddCategory.Text.Split(",")
        '    For i As Integer = 0 To strArray.Length - 2
        '        If strArray.ToString().Trim() <> "" Then
        '            criteria = criteria + " Category like '" + strArray(i) + "' and"
        '        End If

        '    Next
        'End If

        'If criteria = " and " Then
        '    criteria = ""
        'End If

        'If (criteria.Length > 0) Then
        '    criteria = criteria.ToString().Substring(0, criteria.Length - 3)
        'End If

        If (rb12Label.Checked = True) Then
            Dim frm As New ViewCourierReports("AddressPrint12", DateTimePicker1.Value, DateTimePicker2.Value, "Label")
            frm.MdiParent = MDIMainForm
            frm.StartPosition = FormStartPosition.CenterScreen

            frm.Show()
        ElseIf (rb21Label.Checked = True) Then
            Dim frm As New ViewCourierReports("AddressPrint21", DateTimePicker1.Value, DateTimePicker2.Value, "Label")
            frm.MdiParent = MDIMainForm
            frm.StartPosition = FormStartPosition.CenterScreen

            frm.Show()
        End If

    End Sub

    Private Sub GvAddress_CellClick(ByVal sender As System.Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles GvAddress.CellClick
        Try
            Address_ID = Convert.ToInt32(Me.GvAddress.SelectedCells(0).Value)
            bindData()
        Catch ex As Exception
            MessageBox.Show(ex.Message)
        End Try
    End Sub
End Class