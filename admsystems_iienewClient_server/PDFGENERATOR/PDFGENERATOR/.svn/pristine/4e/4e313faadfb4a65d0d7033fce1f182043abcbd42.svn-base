Imports System.Data.SqlClient

Public Class PartyAccountMaster

    Dim linq_obj As New RoErpDataContext(System.Configuration.ConfigurationManager.AppSettings("constr").ToString())
    Dim Address_ID As Integer
    Dim PartyId As Integer
    Dim PartyDebitId As Integer
    Dim PartyCreditId As Integer
    Dim tblDebit As New DataTable
    Dim tblCredit As New DataTable
    Dim rwIDDelDebitDetail As Integer
    Dim rwIDDelCreditDetail As Integer

    Public Sub New()
        ' This call is required by the designer.
        InitializeComponent()
        AutoComplete_Text()
        GvInEnq_Bind()
        txtDebitNo.Text = If(gvDebit.Rows.Count = 0, 1, gvDebit.Rows.Count + 1).ToString()
        txtCreditNo.Text = If(gvCredit.Rows.Count = 0, 1, gvCredit.Rows.Count + 1).ToString()

        PartyId = 0
        getPageRight()

    End Sub

    Public Sub getPageRight()
        Try
            Dim dv As New DataTable
            Dim dataView As DataView

            Dim Class1 As New Class1
            Dim RowCount As Integer
            Dim statusCheck As Boolean = False

            Dim strName As String = ""

            dataView = Class1.global.UserPermissionDataset.Tables(0).DefaultView
            dataView.RowFilter = "([DetailName] like 'Party Master')"

            If (dataView.Count > 0) Then
                dv = dataView.ToTable()

                If (dv.Rows(0)("Type") = 1) Then

                Else
                    For RowCount = 0 To dv.Rows.Count - 1
                        If (dv.Rows(RowCount)("IsAdd") = True) Then
                            btnPOSave.Enabled = True
                        Else
                            btnPOSave.Enabled = False
                        End If
                        If (dv.Rows(RowCount)("IsUpdate") = True) Then
                            btnchangePO.Enabled = True
                        Else
                            btnchangePO.Enabled = False
                        End If
                        If (dv.Rows(RowCount)("IsDelete") = True) Then
                            btnDelPO.Enabled = False
                        End If
                        If (dv.Rows(RowCount)("IsPrint") = True) Then
                            btnReportPrint_new.Enabled = True
                        Else
                            btnReportPrint_new.Enabled = False
                        End If

                    Next
                End If

            End If

        Catch ex As Exception
            MessageBox.Show(ex.Message)
        End Try

    End Sub

    Public Sub AutoComplete_Text()
        Dim data = linq_obj.SP_Get_AddressListAutoCompleteForOrder("Name").ToList()
        For Each iteam As SP_Get_AddressListAutoCompleteForOrderResult In data
            txtPartyName.AutoCompleteCustomSource.Add(iteam.Result)
        Next
        Dim dataEnq = linq_obj.SP_Get_AddressListAutoCompleteForOrder("EnqNo").ToList()
        For Each iteam As SP_Get_AddressListAutoCompleteForOrderResult In dataEnq
            txtEntryNo.AutoCompleteCustomSource.Add(iteam.Result)
        Next
    End Sub

    Public Sub GvInEnq_Bind()
        bindEnqGrid()
        'Dim enq = linq_obj.SP_Get_AddressForOrder().ToList()
        'Dim dt As New DataTable
        'dt.Columns.Add("ID")
        'dt.Columns.Add("Name")
        'dt.Columns.Add("EnqNo")
        'For Each item As SP_Get_AddressForOrderResult In enq
        '    dt.Rows.Add(item.Pk_AddressID, item.Name, item.EnqNo)
        'Next
        'gvAddressList.DataSource = dt
        'Me.gvAddressList.Columns(0).Visible = False

    End Sub

    Public Sub bindAllData(ByVal address As Integer)
        ClearAll()
        Address_ID = Convert.ToInt32(address)
        GetClientDetails_Bind()
        tblDebit.Clear()
        tblCredit.Clear()
        Dim data = linq_obj.SP_Select_Party_Master_ByAddressId(Address_ID).ToList()
        If data.Count > 0 Then
            GetClientDetails_Bind()
            PartyId = data(0).Pk_PartyId
            txtEntryNo.Text = Convert.ToString(data(0).EntryNo)
            dtODate.Text = If(Convert.ToString(data(0).OrderDate) = "01-01-1900 00:00:00", "", Convert.ToString(data(0).OrderDate))
            txtPONo.Text = Convert.ToString(data(0).PONo)
            txtOType.Text = Convert.ToString(data(0).OType)
            txtPlantName.Text = Convert.ToString(data(0).PlantName)
            txtCapacity.Text = (Convert.ToString(data(0).Capacity))
            dtDispatchDate.Text = If(Convert.ToString(data(0).DispatchDate) = "01-01-1900 00:00:00", "", Convert.ToString(data(0).DispatchDate))
            txtExecutive.Text = Convert.ToString(data(0).ExecutiveName)
            txtOrderStatus.Text = Convert.ToString(data(0).OrderStatus)
            txtRemarks.Text = Convert.ToString(data(0).Remarks)
            txtBreakNo.Text = Convert.ToString(data(0).BreakSrNo)
            txtPDCRem.Text = Convert.ToString(data(0).PDCReminder)
            Dim debitData = linq_obj.SP_Select_Party_DebitDetail_ByPartyId(data(0).Pk_PartyId).ToList()
            For Each item As SP_Select_Party_DebitDetail_ByPartyIdResult In debitData
                Dim dr As DataRow
                dr = tblDebit.NewRow()
                dr("No") = item.DebitEntryNo
                dr("PlantName") = item.PlantScheme
                dr("Qty") = item.Qty
                dr("Amount") = item.Amount
                tblDebit.Rows.Add(dr)
                txtDebitDiscount.Text = Convert.ToString(item.Discount)
                txtDebitNetDebit.Text = Convert.ToString(item.NetDebit)
                txtDebitTotal.Text = Convert.ToString(item.TotalDebit)
                PartyDebitId = item.Pk_PartyDebitId
            Next

            gvDebit.DataSource = tblDebit
            txtDebitNo.Text = If(gvDebit.Rows.Count = 0, 1, gvDebit.Rows.Count + 1).ToString()

            Dim creditData = linq_obj.SP_Select_Party_CreditDetail_ByPartyId(data(0).Pk_PartyId).ToList()
            For Each item As SP_Select_Party_CreditDetail_ByPartyIdResult In creditData
                Dim dr As DataRow
                dr = tblCredit.NewRow()

                dr("No") = item.EntryNo
                dr("PType") = item.PType
                dr("PDate") = item.PDate
                dr("Amount") = item.Amount
                tblCredit.Rows.Add(dr)
                txtCreditAdvance.Text = Convert.ToString(item.Advance)
                txtCreditOutstanding.Text = Convert.ToString(item.Outstanding)
                txtCreditTotal.Text = Convert.ToString(item.TotalCredit)
                txtCreditKasar.Text = Convert.ToString(item.Kasar)
                PartyCreditId = item.Pk_PartyCreditId
            Next
            gvCredit.DataSource = tblCredit
            txtCreditNo.Text = If(gvCredit.Rows.Count = 0, 1, gvCredit.Rows.Count + 1).ToString()
            btnPOSave.Enabled = False

        Else
            GetClientDetails_Bind()
            PartyId = 0
            btnPOSave.Enabled = True

        End If
    End Sub

    Private Sub gvAddressList_DoubleClick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles gvAddressList.DoubleClick
        Try
            Address_ID = Me.gvAddressList.SelectedCells(0).Value
            bindAllData(Address_ID)

        Catch ex As Exception
            MessageBox.Show(ex.Message)
        End Try

    End Sub

    Public Sub GetClientDetails_Bind()
        Try
            Dim Claient = linq_obj.SP_Get_AddressListById(Address_ID).ToList()
            For Each item As SP_Get_AddressListByIdResult In Claient
                txtPartyName.Text = item.Name
                txtAddress.Text = item.Address
                txtStationName.Text = item.City
                txtState.Text = item.State
                txtContactPerson.Text = item.ContactPerson
                txtContact.Text = item.MobileNo
                txtEmailAddress.Text = item.EmailID
                txtEntryNo.Text = item.EnqNo
            Next
            'Get Enquiry Client Master Details
        Catch ex As Exception
            MessageBox.Show("Error :" + ex.Message)
        End Try
    End Sub

    Private Sub btn_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btn.Click
        If (PartyId = 0) Then
            txtDebitNo.Text = ""
            txtDebitAmount.Text = ""
            txtDebitDiscount.Text = ""
            txtDebitNetDebit.Text = ""
            txtDebitPlantName.Text = ""
            txtDisStatus.Text = ""
        Else
            txtDebitNo.Text = ""
            txtDebitAmount.Text = ""
            txtDebitPlantName.Text = ""
        End If

        txtDebitNo.Text = If(gvDebit.Rows.Count = 0, 1, gvDebit.Rows.Count + 1).ToString()
        txtDebitPlantName.Focus()

    End Sub

    Private Sub btnDebitDelete_Click(ByVal sender As System.Object, ByVal e As System.EventArgs)
        txtDebitNo.Text = ""
        txtDebitAmount.Text = ""
        txtDebitPlantName.Text = ""
        txtDisStatus.Text = ""
        For index = 1 To gvCredit.SelectedRows.Count
            gvCredit.Rows.Remove(gvCredit.SelectedRows.Item(index))
        Next
        txtDebitNo.Text = If(gvDebit.Rows.Count = 0, 1, gvDebit.Rows.Count + 1).ToString()

    End Sub

    Private Sub PartyAccountMaster_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load



        ''add column into creditData

        tblCredit.Columns.Add("No")
        tblCredit.Columns.Add("PType")
        tblCredit.Columns.Add("PDate")
        tblCredit.Columns.Add("Amount")
        gvCredit.DataSource = tblCredit

        'add columns in debitdata

        tblDebit.Columns.Add("No")
        tblDebit.Columns.Add("PlantName")
        tblDebit.Columns.Add("Qty")
        tblDebit.Columns.Add("Amount")
        gvDebit.DataSource = tblDebit
        For Each control As Control In Me.Controls
            ' The textbox control.
            Dim parentControl As New Control


            If (control.GetType() Is GetType(GroupBox)) Then
                Dim grpBox As GroupBox = TryCast(control, GroupBox)
                parentControl = grpBox
            ElseIf (control.GetType() Is GetType(TabControl)) Then
                Dim TC As TabControl = TryCast(control, TabControl)
                parentControl = TC
            Else
                Try
                    parentControl = control
                Catch ex As Exception

                End Try

            End If

            For Each subcontrol As Control In parentControl.Controls
                If (subcontrol.GetType() Is GetType(TextBox)) Then
                    Dim textBox As TextBox = TryCast(subcontrol, TextBox)

                    ' If not null, set the handler.
                    If textBox IsNot Nothing Then
                        AddHandler textBox.Enter, AddressOf TextBox_Enter
                        AddHandler textBox.Leave, AddressOf TextBox_Leave
                    End If
                End If

                ' Set the handler.
            Next

            ' Set the handler.
        Next
    End Sub
    Private Sub TextBox_Enter(ByVal sender As System.Object, ByVal e As System.EventArgs)
        Dim txt As New TextBox()
        txt = DirectCast(sender, TextBox)

        txt.BackColor = Color.LightYellow
    End Sub
    Private Sub TextBox_Leave(ByVal sender As System.Object, ByVal e As System.EventArgs)
        Dim txt As New TextBox()
        txt = DirectCast(sender, TextBox)

        txt.BackColor = Color.White
    End Sub

    Private Sub btnDebitSave_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnDebitSave.Click
        ''add new row runtime and display into grid. it will save after click on save button
        Dim dr As DataRow
        dr = tblDebit.NewRow()
        dr("No") = txtDebitNo.Text
        dr("PlantName") = txtDebitPlantName.Text
        dr("Amount") = txtDebitAmount.Text
        dr("Qty") = txtQty.Text

        txtDebitTotal.Text = ((If(txtDebitTotal.Text.Trim() = "", 0, Convert.ToDecimal(txtDebitTotal.Text))) + (If(txtDebitAmount.Text.Trim() = "", 0, Convert.ToDecimal(txtDebitAmount.Text)) * Convert.ToInt32(txtQty.Text))).ToString()
        'If (rwIDDelFollowDetail >= 0) Then
        '    DGVfollowUp.Rows.RemoveAt(rwIDDelFollowDetail)
        '    tblFollowup = DGVfollowUp.DataSource
        '    tblFollowup.Rows.Add(dr)
        'Else
        '    tblFollowup.Rows.Add(dr)

        'End If
        tblDebit.Rows.Add(dr)
        gvDebit.DataSource = tblDebit
        txtDebitNo.Text = If(gvDebit.Rows.Count = 0, 1, gvDebit.Rows.Count + 1).ToString()
        txtQty.Text = ""
        txtDebitAmount.Text = ""
        txtDebitPlantName.Text = ""
        btn.Focus()

    End Sub

    Private Sub btnCreditSave_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCreditSave.Click

        ''add new row runtime and display into grid. it will save after click on save button

        Dim dr As DataRow
        dr = tblCredit.NewRow()
        dr("No") = txtCreditNo.Text
        dr("PType") = txtCreditPType.Text
        dr("PDate") = dtCreditPDate.Value.Date
        dr("Amount") = txtCreditAmount.Text
        tblCredit.Rows.Add(dr)
        gvCredit.DataSource = tblCredit
        txtCreditTotal.Text = (If(txtCreditAmount.Text.Trim() = "", 0, Convert.ToDecimal(txtCreditAmount.Text.Trim())) + If(txtCreditTotal.Text.Trim() = "", 0, Convert.ToDecimal(txtCreditTotal.Text.Trim()))).ToString()
        txtCreditOutstanding.Text = (If(txtCreditTotal.Text.Trim() = "", 0, Convert.ToDecimal(txtCreditTotal.Text.Trim())) - If(txtCreditKasar.Text.Trim() = "", 0, Convert.ToDecimal(txtCreditKasar.Text))).ToString()

        txtCreditNo.Text = If(gvCredit.Rows.Count = 0, 1, gvCredit.Rows.Count + 1).ToString()
        dtCreditPDate.Value = DateTime.Now
        txtCreditAmount.Text = ""
        'txtCreditNo.Text = ""
        txtCreditPType.Text = ""


    End Sub
     


    

    Private Sub btnCreditAdd_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCreditAdd.Click
        txtCreditAmount.Text = ""
        txtCreditNo.Text = ""
        txtCreditPType.Text = ""
        txtCreditNo.Text = If(gvCredit.Rows.Count = 0, 1, gvCredit.Rows.Count + 1).ToString()
        txtCreditPType.Focus()
    End Sub

    Function validateForm() As Boolean
        Return True
    End Function

    Private Sub btnPOAdd_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnPOAdd.Click
        ClearAll()


    End Sub

    Private Sub btnPOSave_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnPOSave.Click
        If txtAddress.Text.Trim() = "" Then
            Label39.Text = "Error... "
            ErrorProvider1.SetError(txtAddress, Label39.Text)
            ' Return
        End If
        If (PartyId <= 0) Then
            Dim result As Integer

            result = linq_obj.SP_Insert_Party_Master(txtEntryNo.Text, Convert.ToDateTime(If(dtODate.Text = "", "01-01-1900", dtODate.Text)), txtPONo.Text, txtOType.Text, Address_ID, txtPlantName.Text, txtCapacity.Text,
                                                     Convert.ToDateTime(If(dtDispatchDate.Text = "", "01-01-1900", dtDispatchDate.Text)), txtExecutive.Text, txtOrderStatus.Text, txtRemarks.Text, If(txtBreakNo.Text.Trim() = "", 0, Convert.ToDecimal(txtBreakNo.Text)), txtPDCRem.Text)

            If result > 0 Then
                linq_obj.SubmitChanges()

                Dim resDebit As Integer

                resDebit = linq_obj.SP_Insert_Party_Debit(result, If(txtDebitTotal.Text.Trim() = "", 0, Convert.ToDecimal(txtDebitTotal.Text.Trim())), If(txtDebitDiscount.Text.Trim() = "", 0, Convert.ToDecimal(txtDebitDiscount.Text.Trim())), If(txtDebitNetDebit.Text.Trim() = "", 0, Convert.ToDecimal(txtDebitNetDebit.Text.Trim())))

                If resDebit > 0 Then
                    linq_obj.SubmitChanges()
                    Dim resdetail As Integer
                    For index = 0 To tblDebit.Rows.Count - 1
                        resdetail = linq_obj.SP_Insert_Party_DebitDetail(resDebit, If(tblDebit.Rows(index)("No").ToString() = "", 0, Convert.ToInt32(tblDebit.Rows(index)("No").ToString())), tblDebit.Rows(index)("PlantName").ToString(), If(tblDebit.Rows(index)("Qty").ToString() = "", 0, Convert.ToInt32(tblDebit.Rows(index)("Qty").ToString())), If(tblDebit.Rows(index)("Amount").ToString() = "", 0, Convert.ToDecimal(tblDebit.Rows(index)("Amount").ToString())))
                        If (resdetail > 0) Then
                            linq_obj.SubmitChanges()
                        End If
                    Next
                End If

                Dim resCredit As Integer
                resCredit = linq_obj.SP_Insert_Party_Credit(result, If(txtCreditTotal.Text.Trim() = "", 0, Convert.ToDecimal(txtCreditTotal.Text.Trim())), If(txtCreditKasar.Text.Trim() = "", 0, Convert.ToDecimal(txtCreditKasar.Text.Trim())), If(txtCreditOutstanding.Text.Trim() = "", 0, Convert.ToDecimal(txtCreditOutstanding.Text.Trim())), If(txtCreditAdvance.Text.Trim() = "", 0, Convert.ToDecimal(txtCreditAdvance.Text.Trim())))
                If resCredit > 0 Then
                    linq_obj.SubmitChanges()
                    Dim resdetail As Integer
                    For index = 0 To tblCredit.Rows.Count - 1
                        resdetail = linq_obj.SP_Insert_Party_CreditDetail(resCredit, If(tblCredit.Rows(index)("No").ToString() = "", 0, Convert.ToInt32(tblCredit.Rows(index)("No").ToString())), tblCredit.Rows(index)("PType").ToString(), Convert.ToDateTime(tblCredit.Rows(index)("PDate").ToString()), If(tblCredit.Rows(index)("Amount").ToString() = "", 0, Convert.ToDecimal(tblCredit.Rows(index)("Amount").ToString())))
                        If (resdetail > 0) Then
                            linq_obj.SubmitChanges()
                        End If
                    Next
                End If
                MessageBox.Show("Successfully Saved")
                ClearAll()
            Else
                MessageBox.Show("Error In Save")
            End If
        Else
            btnPOSave.Enabled = False
        End If
        bindEnqGrid()
    End Sub

    Private Sub txtDebitDiscount_Leave(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtDebitDiscount.Leave
        txtDebitNetDebit.Text = (If(txtDebitTotal.Text.Trim() = "", 0, Convert.ToDecimal(txtDebitTotal.Text.Trim())) - If(txtDebitDiscount.Text.Trim() = "", 0, Convert.ToDecimal(txtDebitDiscount.Text))).ToString()

    End Sub

    Private Sub txtCreditKasar_Leave(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtCreditKasar.Leave
        txtCreditOutstanding.Text = (If(txtCreditTotal.Text.Trim() = "", 0, Convert.ToDecimal(txtCreditTotal.Text.Trim())) - If(txtCreditKasar.Text.Trim() = "", 0, Convert.ToDecimal(txtCreditKasar.Text))).ToString()

    End Sub

    Private Sub btnchangePO_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnchangePO.Click
        If txtAddress.Text.Trim() = "" Then
            Label39.Text = "Error... "
            ErrorProvider1.SetError(txtAddress, Label39.Text)
            ' Return
        End If
        If (PartyId > 0) Then


            Dim result As Integer

            result = linq_obj.SP_Update_Party_Master(txtEntryNo.Text, Convert.ToDateTime(If(dtODate.Text = "", "01-01-1900", dtODate.Text)), txtPONo.Text, txtOType.Text, Address_ID, txtPlantName.Text, txtCapacity.Text,
                                                     Convert.ToDateTime(If(dtDispatchDate.Text = "", "01-01-1900", dtDispatchDate.Text)), txtExecutive.Text, txtOrderStatus.Text, txtRemarks.Text, If(txtBreakNo.Text.Trim() = "", 0, Convert.ToDecimal(txtBreakNo.Text)), txtPDCRem.Text, PartyId)

            If result >= 0 Then
                linq_obj.SubmitChanges()
                Dim resdeleteDebit As Integer
                resdeleteDebit = linq_obj.SP_Delete_Party_Debit(PartyDebitId)
                resdeleteDebit = linq_obj.SP_Delete_Party_DebitDetail(PartyDebitId)
                linq_obj.SubmitChanges()

                Dim resDebit As Integer

                resDebit = linq_obj.SP_Insert_Party_Debit(PartyId, If(txtDebitTotal.Text.Trim() = "", 0, Convert.ToDecimal(txtDebitTotal.Text.Trim())), If(txtDebitDiscount.Text.Trim() = "", 0, Convert.ToDecimal(txtDebitDiscount.Text.Trim())), If(txtDebitNetDebit.Text.Trim() = "", 0, Convert.ToDecimal(txtDebitNetDebit.Text.Trim())))

                If resDebit >= 0 Then
                    linq_obj.SubmitChanges()
                    Dim resdetail As Integer
                    For index = 0 To tblDebit.Rows.Count - 1
                        resdetail = linq_obj.SP_Insert_Party_DebitDetail(resDebit, If(tblDebit.Rows(index)("No").ToString() = "", 0, Convert.ToInt32(tblDebit.Rows(index)("No").ToString())), tblDebit.Rows(index)("PlantName").ToString(), If(tblDebit.Rows(index)("Qty").ToString() = "", 0, Convert.ToInt32(tblDebit.Rows(index)("Qty").ToString())), If(tblDebit.Rows(index)("Amount").ToString() = "", 0, Convert.ToDecimal(tblDebit.Rows(index)("Amount").ToString())))
                        If (resdetail > 0) Then
                            linq_obj.SubmitChanges()
                        End If
                    Next
                End If
                Dim resdeletecredit As Integer
                resdeletecredit = linq_obj.SP_Delete_Party_Credit(PartyCreditId)
                resdeletecredit = linq_obj.SP_Delete_Party_CreditDetail(PartyCreditId)

                linq_obj.SubmitChanges()
                Dim resCredit As Integer
                resCredit = linq_obj.SP_Insert_Party_Credit(PartyId, If(txtCreditTotal.Text.Trim() = "", 0, Convert.ToDecimal(txtCreditTotal.Text.Trim())), If(txtCreditKasar.Text.Trim() = "", 0, Convert.ToDecimal(txtCreditKasar.Text.Trim())), If(txtCreditOutstanding.Text.Trim() = "", 0, Convert.ToDecimal(txtCreditOutstanding.Text.Trim())), If(txtCreditAdvance.Text.Trim() = "", 0, Convert.ToDecimal(txtCreditAdvance.Text.Trim())))
                If resCredit > 0 Then
                    linq_obj.SubmitChanges()
                    Dim resdetail As Integer
                    For index = 0 To tblCredit.Rows.Count - 1
                        resdetail = linq_obj.SP_Insert_Party_CreditDetail(resCredit, If(tblCredit.Rows(index)("No").ToString() = "", 0, Convert.ToInt32(tblCredit.Rows(index)("No").ToString())), tblCredit.Rows(index)("PType").ToString(), Convert.ToDateTime(tblCredit.Rows(index)("PDate").ToString()), If(tblCredit.Rows(index)("Amount").ToString() = "", 0, Convert.ToDecimal(tblCredit.Rows(index)("Amount").ToString())))
                        If (resdetail > 0) Then
                            linq_obj.SubmitChanges()
                        End If
                    Next
                End If
                MessageBox.Show("Successfully Updated")
                ClearAll()
            Else
                MessageBox.Show("Error In Update")
            End If

        Else
            MessageBox.Show("Error : No Data Found For Update")

        End If

    End Sub

    Private Sub ClearAll()
        txtDebitNo.Text = ""
        txtQty.Text = ""

        txtDebitAmount.Text = ""
        txtDebitTotal.Text = ""
        txtDebitDiscount.Text = ""
        txtDebitNetDebit.Text = ""
        txtDebitPlantName.Text = ""
        txtDisStatus.Text = ""

        txtQty.Text = ""
   txtCreditNo.Text = ""
        txtCreditPType.Text = ""
        txtCreditAdvance.Text = ""
        txtCreditKasar.Text = ""
        txtCreditOutstanding.Text = ""
        txtCreditTotal.Text = ""
        txtPartyName.Text = ""
        txtAddress.Text = ""
        txtStationName.Text = ""
        txtState.Text = ""
        txtContactPerson.Text = ""
        txtContact.Text = ""
        txtEmailAddress.Text = ""
        txtEntryNo.Text = ""
        txtEntryNo.Text = ""
        txtPONo.Text = ""
        txtOType.Text = ""
        txtPlantName.Text = ""
        txtCapacity.Text = ""
        dtDispatchDate.Text = ""
        dtODate.Text = ""
        txtExecutive.Text = ""
        txtOrderStatus.Text = ""
        txtRemarks.Text = ""
        txtBreakNo.Text = ""
        txtPDCRem.Text = ""
        tblCredit.Clear()
        tblDebit.Clear()
        PartyId = 0
        btnPOSave.Enabled = True

        Address_ID = 0
    End Sub

    Private Sub btnCancelPO_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCancelPO.Click
        ClearAll()
    End Sub

    Private Sub btnDelPO_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnDelPO.Click
        Dim result As DialogResult = MessageBox.Show("Are You Sure?", "Important Message", MessageBoxButtons.YesNo, MessageBoxIcon.Exclamation)
        If result = DialogResult.Yes Then

            MessageBox.Show("Successfully Deleted")
            linq_obj.SP_Delete_Party_Master(PartyId)

            linq_obj.SubmitChanges()

            ClearAll()
        End If

    End Sub

    Private Sub btnSearch_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnSearch.Click
        bindEnqGrid()

    End Sub
    Public Sub bindEnqGrid()
        Dim criteria As String
        criteria = " and "

        If txtParty.Text.Trim() <> "" Then
            criteria = criteria + " Name like '%" + txtParty.Text + "%' and"
        End If
        If txtCoperson.Text.Trim() <> "" Then
            criteria = criteria + " ContactPerson like '%" + txtCoperson.Text + "%' and"
        End If
        If txtstation.Text.Trim <> "" Then
            criteria = criteria + " City like '%" + txtstation.Text + "%' and"
        End If
        'If txtInqSearchLandLineNo.Text.Trim() <> "" Then
        '    criteria = criteria + " LandlineNo like '%" + txtInqSearchLandLineNo.Text + "%' and"
        'End If
        If txtcontactNo.Text.Trim() <> "" Then
            criteria = criteria + " MobileNo like '%" + txtcontactNo.Text + "%' and"
        End If
        If txtEmail.Text.Trim() <> "" Then
            criteria = criteria + " EmialID like '%" + txtEmail.Text + "%' and"
        End If
        If txtDisStatus.Text.Trim() <> "" Then
            criteria = criteria + " TypeOfEnq like '" + txtDisStatus.Text + "' and"
        End If
        If txtSearchEnqNo.Text.Trim() <> "" Then
            criteria = criteria + " EnqNo like '%" + txtSearchEnqNo.Text + "%' and"
        End If

        If criteria = " and " Then
            criteria = ""
        End If

        If (criteria.Length > 0) Then
            criteria = criteria.ToString().Substring(0, criteria.Length - 3)
        End If

        Dim cmd As New SqlCommand
        cmd.CommandText = "SP_Get_AddressForPartyDetail"
        cmd.Parameters.Add("@criteria", SqlDbType.VarChar).Value = IIf(criteria = "", "", criteria)
        Dim objclass As New Class1

        Dim dt As New DataTable
        dt.Columns.Add("Pk_AddressID")
        dt.Columns.Add("EnqNo")
        dt.Columns.Add("Name")
        Dim dtData As DataTable

        dtData = objclass.GetEnqOrderReportData(cmd)
        If dtData.Rows.Count < 1 Then
            MessageBox.Show("Record Not Found", "No Records", MessageBoxButtons.OK, MessageBoxIcon.Information)
            gvAddressList.DataSource = Nothing
            dtData.Dispose()
            dt.Dispose()
        Else
            For index = 0 To dtData.Rows.Count - 1
                dt.Rows.Add(dtData.Rows(index)(0), dtData(index)(1), dtData(index)(2))
            Next
            gvAddressList.DataSource = dt
            Me.gvAddressList.Columns(0).Visible = False
            dtData.Dispose()
            dt.Dispose()
        End If
        txtTotOrders.Text = gvAddressList.RowCount
    End Sub
    Private Sub btnBackPO_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnBackPO.Click
        Me.Close()
    End Sub

    Private Sub btnPOAdd_KeyPress(ByVal sender As System.Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles btnPOAdd.KeyPress

    End Sub

    Private Sub PartyAccountMaster_KeyPress(ByVal sender As System.Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles MyBase.KeyPress


    End Sub

    Private Sub PartyAccountMaster_KeyDown(ByVal sender As System.Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles MyBase.KeyDown
    End Sub

    Private Sub btnReportPrint_Click(ByVal sender As System.Object, ByVal e As System.EventArgs)

        If Address_ID > 0 Then
            Dim frm As New ReportPartyOutstanding(Address_ID)
            frm.MdiParent = MDIMainForm
            frm.StartPosition = FormStartPosition.CenterScreen
            frm.Show()
        End If



    End Sub

    Private Sub Button2_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button2.Click
        grpCFORM.Visible = True
    End Sub

    Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click
        grpPDC.Visible = True
    End Sub

    Public Sub clearCForm()
        txtCFormNo.Text = ""
        txtCFormRemarks.Text = ""
        dtCFormRecDate.Text = ""
    End Sub

    Private Sub btnCFormOk_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCFormOk.Click
        If (Address_ID > 0) Then
            Try
                linq_obj.SP_Insert_Tbl_PartyCFormDetail(Address_ID, IIf(RBCFormYes.Checked, True, False), IIf(RBStatusReceived.Checked, True, False), Convert.ToDateTime(If(dtCFormRecDate.Text = "", "01-01-1900", dtCFormRecDate.Text)), txtCFormNo.Text, txtCFormRemarks.Text)
                linq_obj.SubmitChanges()
                clearCForm()
                grpCFORM.Visible = False
            Catch ex As Exception
                MessageBox.Show(ex.Message)
            End Try
        End If

    End Sub

    Public Sub clearPDC()
        txtPDCRem.Text = ""
        dtChequeDate.Text = ""
        txtChequeAmount.Text = ""

    End Sub

    Private Sub btnPDCOk_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnPDCOk.Click
        If (Address_ID > 0) Then
            Try
                linq_obj.SP_Insert_Tbl_PartyPDCDetail(Address_ID, Convert.ToDateTime(If(dtChequeDate.Text = "", "01-01-1900", dtChequeDate.Text)), Convert.ToDecimal(txtChequeAmount.Text), IIf(RBClear.Checked, True, False))
                linq_obj.SubmitChanges()
                clearPDC()
                grpPDC.Visible = False
            Catch ex As Exception
                MessageBox.Show(ex.Message)
            End Try
        End If
    End Sub

    Private Sub btnCFromClear_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCFromClear.Click
        clearCForm()
        grpCFORM.Visible = False
    End Sub

    Private Sub btnPDCClear_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnPDCClear.Click
        clearPDC()
        grpPDC.Visible = False
    End Sub

    Private Sub txtPartyName_Leave(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtPartyName.Leave
        If (txtPartyName.Text <> "") Then
            Dim data = linq_obj.SP_Get_AddressListByNameForOrder(txtPartyName.Text).ToList()
            If (data.Count > 0) Then
                Address_ID = data(0).Pk_AddressID
                bindAllData(Address_ID)
            End If
        End If

    End Sub

    Private Sub btnReportPrint_new_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnReportPrint_new.Click
        If Address_ID > 0 Then
            Dim frm As New ReportPartyOutstandingPrint(Address_ID)
            frm.MdiParent = MDIMainForm
            frm.StartPosition = FormStartPosition.CenterScreen
            frm.Show()
        End If
    End Sub

    Private Sub gvAddressList_PreviewKeyDown(ByVal sender As System.Object, ByVal e As System.Windows.Forms.PreviewKeyDownEventArgs) Handles gvAddressList.PreviewKeyDown
        Try

            If (e.KeyCode = Keys.Down) Then
                Address_ID = Convert.ToInt64(Me.gvAddressList.Rows(Me.gvAddressList.CurrentRow.Index + 1).Cells(0).Value)
                bindAllData(Address_ID)
            Else
                Address_ID = Convert.ToInt64(Me.gvAddressList.Rows(Me.gvAddressList.CurrentRow.Index - 1).Cells(0).Value)
                bindAllData(Address_ID)
            End If
        Catch ex As Exception
            MessageBox.Show(ex.Message)
        End Try

    End Sub

    Private Sub gvAddressList_CellClick(ByVal sender As System.Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles gvAddressList.CellClick
        Try
            Address_ID = Me.gvAddressList.SelectedCells(0).Value
            bindAllData(Address_ID)
        Catch ex As Exception
            MessageBox.Show(ex.Message)
        End Try
    End Sub

    Private Sub gvDebit_DoubleClick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles gvDebit.DoubleClick

        If (gvDebit.SelectedRows.Count > 0) Then
            txtDebitPlantName.Text = gvDebit.SelectedCells(1).Value.ToString()
            txtQty.Text = gvDebit.SelectedCells(2).Value.ToString()
            txtDebitAmount.Text = gvDebit.SelectedCells(3).Value.ToString()
            txtDebitNo.Text = gvDebit.SelectedCells(0).Value.ToString()


            txtQty.Text = gvDebit.SelectedCells(2).Value.ToString()
            txtDebitAmount.Text = gvDebit.SelectedCells(3).Value.ToString()
            txtDebitNo.Text = gvDebit.SelectedCells(0).Value.ToString()


            rwIDDelDebitDetail = gvDebit.CurrentCell.RowIndex

        End If
        '' gvDebit.Rows.RemoveAt(gvDebit.CurrentCell.RowIndex)

        '  tblDebit = gvDebit.DataSource

    End Sub

    Private Sub gvCredit_DoubleClick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles gvCredit.DoubleClick
        'txtCreditTotal.Text = (If(txtCreditTotal.Text.Trim() =         'nvert.ToDecimal(txtCreditTotal.Text))) +
        '                      (If(gvCredit.SelectedCells(3).Value.ToString() = "", 0, Convert.ToDecimal(gvDebit.SelectedCells(3).Value))).ToSt'ing()

        'gvCredit.Rows.RemoveAt(gvCredit.CurrentCell.RowIndex)

        'tblCredit = gvCredit.DataSourc'
      
        If (gvCredit.SelectedRows.Count > 0) Then
            txtCreditNo.Text = gvCredit.SelectedCells(0).Value.ToString()
            txtCreditPType.Text = gvCredit.SelectedCells(1).Value.ToString()
            dtCreditPDate.Value = gvCredit.SelectedCells(2).Value.ToString()
            txtCreditAmount.Text = gvCredit.SelectedCells(3).Value.ToString()
            'txtDebitTotal.Text = ((If(txtDebitTotal.Text.Trim() = "", 0, Convert.ToDecimal(txtDebitTotal.Text))) +
            '                  (If(gvDebit.SelectedCells(2).Value.ToString() = "", 0, Convert.ToDecimal(gvDebit.SelectedCells(2).Value)) * Convert.ToInt32(gvDebit.SelectedCells(3).Value))).ToString()

        End If

    End Sub
    Private Sub txtEntryNo_Leave(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtEntryNo.Leave
        If (txtEntryNo.Text <> "") Then

            Dim data = linq_obj.SP_Get_AddressListByEnqNo(txtEntryNo.Text).ToList()
            If (data.Count > 0) Then
                Address_ID = data(0).Pk_AddressID
                bindAllData(Address_ID)
            End If

        End If

    End Sub

    Private Sub btnRefresh_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnRefresh.Click
        bindEnqGrid()
    End Sub

  
End Class