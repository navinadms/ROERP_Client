Public Class Rpt_StockMainReport
    Dim linq_obj As New RoErpDataContext(System.Configuration.ConfigurationManager.AppSettings("constr").ToString())
    Dim count As Integer
    Private Sub btnSearch_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnSearch.Click

      

        Dim str As String = cmbReportType.Text

        Dim dataStock = linq_obj.Sp_Rpt_FullStockDetail(dtStartDate.Value, dtEndDate.Value).ToList()

        If (dataStock.Count > 0) Then
            gvStockDetail.DataSource = dataStock
            Select Case str
                Case "Inward Detail"
                    gvStockDetail.Columns(0).Visible = True
                    gvStockDetail.Columns(1).Visible = True
                    gvStockDetail.Columns(2).Visible = True
                    gvStockDetail.Columns(3).Visible = True
                    gvStockDetail.Columns(4).Visible = False
                    gvStockDetail.Columns(5).Visible = False
                    gvStockDetail.Columns(6).Visible = True
                    gvStockDetail.Columns(7).Visible = False
                    gvStockDetail.Columns(8).Visible = False
                    gvStockDetail.Columns(9).Visible = False
                    ' gvStockDetail.Columns(10).Visible = False
                Case "Outward Detail"
                    gvStockDetail.Columns(0).Visible = True
                    gvStockDetail.Columns(1).Visible = True
                    gvStockDetail.Columns(2).Visible = True
                    gvStockDetail.Columns(3).Visible = True
                    gvStockDetail.Columns(4).Visible = False
                    gvStockDetail.Columns(5).Visible = False
                    gvStockDetail.Columns(6).Visible = False
                    gvStockDetail.Columns(7).Visible = True
                    gvStockDetail.Columns(8).Visible = False
                    gvStockDetail.Columns(9).Visible = False
                    ' gvStockDetail.Columns(10).Visible = False
                Case "Combined Detail"
                    gvStockDetail.Columns(0).Visible = True
                    gvStockDetail.Columns(1).Visible = True
                    gvStockDetail.Columns(2).Visible = True
                    gvStockDetail.Columns(3).Visible = True
                    gvStockDetail.Columns(4).Visible = True
                    gvStockDetail.Columns(5).Visible = True
                    gvStockDetail.Columns(6).Visible = True
                    gvStockDetail.Columns(7).Visible = True
                    gvStockDetail.Columns(8).Visible = True
                    gvStockDetail.Columns(9).Visible = True
                    '    gvStockDetail.Columns(10).Visible = True
            End Select


        Else
            gvStockDetail.DataSource = Nothing
        End If

    End Sub

    Private Sub btnExportExcel_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnExportExcel.Click
        Try
            Dim app As Microsoft.Office.Interop.Excel._Application = New Microsoft.Office.Interop.Excel.Application()

            ' creating new WorkBook within Excel application
            Dim workbook As Microsoft.Office.Interop.Excel._Workbook = app.Workbooks.Add(Type.Missing)

            ' creating new Excelsheet in workbook
            Dim worksheet As Microsoft.Office.Interop.Excel._Worksheet = Nothing

            ' see the excel sheet behind the program
            app.Visible = True

            ' get the reference of first sheet. By default its name is Sheet1.
            ' store its reference to worksheet
            worksheet = workbook.Sheets("Sheet1")
            worksheet = workbook.ActiveSheet
            ' changing the name of active sheet
            worksheet.Name = Me.Name


            ' storing header part in Excel
            For i As Integer = 1 To gvStockDetail.Columns.Count - 1


                worksheet.Cells(1, i) = gvStockDetail.Columns(i - 1).HeaderText

            Next

            ' storing Each row and column value to excel sheet
            For i As Integer = 0 To gvStockDetail.Rows.Count - 1
                For j As Integer = 0 To gvStockDetail.Columns.Count - 1
                    If gvStockDetail.Columns(j).Visible = True Then
                        worksheet.Cells(i + 2, j + 1) = gvStockDetail.Rows(i).Cells(j).Value.ToString()
                        count += i + 2 + j + 1
                    End If
                Next
            Next
            ' save the application
            'workbook.SaveAs("d:\output(" & count & ").xls", Type.Missing, Type.Missing, Type.Missing, Type.Missing, Type.Missing, _
            'Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlExclusive, Type.Missing, Type.Missing, Type.Missing, Type.Missing)
            ' Exit from the application
            ' app.Quit();
            ' storing Each row and column value to excel sheet
            ' MessageBox.Show("Excel Download SucessFully on D:\output(" & count & ").xls ")
        Catch generatedExceptionName As Exception
            MessageBox.Show(generatedExceptionName.Message)
        End Try

        'Dim rpt As New rpt_inquiryReport
        'rpt.SetDataSource(ds.Tables(1))
        'rpt.ExportToDisk(CrystalDecisions.Shared.ExportFormatType.Excel, "ABC.xls")
        'MessageBox.Show("Successfully Exported")
        'FileOpen(1, "DEF.pdf", OpenMode.Append, OpenAccess.Write)
        'rpt.Refresh()
    End Sub
End Class