<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhyABaAOYAAP////f3//f39+/39/Dx9e/v9+/v7+bv7+bm797m797m5uHj6t7e5tbe5tbW5tbW
        3tLV4M7W3s7O3sXO3sXO1sPH1sXF1r3F1r3Fzr29zrW9zrS5y7W1xbW1zq21xaWtxaWtvaWrwZytvZyl
        tZylvZSltZadt5SctYyctYyUtYyUrYSUrYeQrISMrYSMpXuMpXuEpXOEpXiConOEnHN7nGt7nGtznGl0
        l2tzlGNzlFprlFprjFpmjVpjjFJjjFJjhFJahEpahEtYg0JShEJSezpSezpKezxKeDpKczFKczFCcylC
        cylCay08bik6ayE6ayExayExYxkxYx4uZBkpYxApWhAhWgghWv4BAgAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH/C05FVFNDQVBFMi4wAwEAAAAh+QQF
        BwBYACwAAAAAyABaAAAH/4AAgoOEhYaHiImKi4yNjo+QkZKTlJWWl5iZmpucnZ6foKGio6Slpqeoqaqr
        rK2ur7CxsrO0tba3uLm6u7y9vr/AwcLDlBQUA8TJuBY1SVFPThLK07IaTlVUz05K0tTeqwpBVtjaSkkR
        3+mnEVLj2dDmRujq9KEaV+7lOy0kCPX/ndjle4LkhD+ACDcVcDKwBrKEEDPFGHgiosVLCgbCuMiREg5y
        T3x0HBkJyrtoJFMy0nAyh8qXiVSU0wCzZiEf8JIctGlzx7YkRngK1RGPiFCeOYASMXq0Zg4jS4MIaAoT
        RdQfDqi+1EAkyI8eJbSqROC1x44aU8WSpGE2Rw6aav9HXtjhtgaNnXEvvshhF8YKvHkhNuj7ogUKwIER
        aoBReEWKExfSHpKceJqHFo5PkCDxgYICA4IKFEDQgAHlysk0PN78wYMHDRkuUJAQoXSCAqi9RWDtGrZs
        2rYR4M5NrQCG3rFn12aQQLiAAMS9GYiQHDhz59HpjUagwDn07ODDix9Pvrz58+jTq1/Pvr379/Djy59P
        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
        FmjcKBAAOw==
</value>
  </data>
</root>