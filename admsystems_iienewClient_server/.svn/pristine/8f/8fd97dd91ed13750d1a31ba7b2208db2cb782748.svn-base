Public Class InwardRegister

    Dim linq_obj As New RoErpDataContext(System.Configuration.ConfigurationManager.AppSettings("constr").ToString())
    Dim PRID As Long
    Dim InwardId As Long
    Dim InwardDetailId As Long
    Dim tblItem As New DataTable
    Dim RWID As Long
    Public Sub New()
        ' This call is required by the designer.
        InitializeComponent()
        AutoCompated_Text()
        bindDropDown()
        bindGrid()
        PRID = 0
        txtTotalRecords.Text = getTotalEntry().ToString()
        txtNo.Text = IIf(DGVPurchaseItems.Rows.Count = 0, 1, DGVPurchaseItems.Rows.Count)
        '  PRID = cmbCategory.SelectedValue
        bindItemGrid()

        If (InwardId > 0) Then
            btnSave.Enabled = False
        Else
            btnSave.Enabled = True
        End If
    End Sub
    Protected Sub bindDropDown()
        cmbCategory.Items.Clear()
        Dim dt As New DataTable
        dt.Columns.Add("Id")
        dt.Columns.Add("Category")
        Dim productMain = linq_obj.SP_Select_All_ProductRegisterMaster().ToList()
        For Each item As SP_Select_All_ProductRegisterMasterResult In productMain
            dt.Rows.Add(item.Pk_ProductRegisterId, item.CategoryName)
        Next
        Dim dr As DataRow = dt.NewRow()
        dr(1) = "Select"
        dt.Rows.InsertAt(dr, 0)
        cmbCategory.DataSource = dt
        cmbCategory.DisplayMember = "Category"
        cmbCategory.ValueMember = "Id"
        cmbCategory.AutoCompleteMode = AutoCompleteMode.Append
        cmbCategory.DropDownStyle = ComboBoxStyle.DropDownList
        cmbCategory.AutoCompleteSource = AutoCompleteSource.ListItems
    End Sub
    Public Sub bindGrid()
        Dim mainData = linq_obj.SP_Select_All_Tbl_InwardStockMaster().ToList()
        Dim dt As New DataTable
        dt.Columns.Add("Pk_InwardId")
        dt.Columns.Add("Bill No")
        dt.Columns.Add("Bill Date")
        dt.Columns.Add("Company Name")
        For Each item As SP_Select_All_Tbl_InwardStockMasterResult In mainData
            dt.Rows.Add(item.Pk_InwardId, item.BillNo, item.BillDate, item.Name)
        Next
        GDVInwardDetail.DataSource = dt
        If (GDVInwardDetail.RowCount > 0) Then
            GDVInwardDetail.Columns(0).Visible = False
        End If
    End Sub
    Public Function getTotalEntry() As Long
        Return GDVInwardDetail.Rows.Count - 1
    End Function
    Public Sub bindItemGrid()
        'bind a data
        tblItem.Clear()
        Dim itemData = linq_obj.SP_Select_All_Tbl_InwardDetail().Where(Function(t) t.Fk_InwardId = InwardId)
        For Each item As SP_Select_All_Tbl_InwardDetailResult In itemData
            Dim dr As DataRow
            dr = tblItem.NewRow()
            dr("SrNo") = tblItem.Rows.Count + 1
            dr("Category") = item.CategoryName
            dr("Row Material Name") = item.RowMaterialName
            dr("Quantity") = item.Quantity
            dr("Unit") = item.Unit
            dr("Fk_Category") = item.Fk_ProductRegisterId
            dr("Fk_RowMaterial") = item.Fk_RowMaterialId
            tblItem.Rows.Add(dr)
        Next
        DGVPurchaseItems.DataSource = tblItem
        Dim rowCount As Integer
        rowCount = DGVPurchaseItems.RowCount
        If rowCount > 0 Then
            DGVPurchaseItems.Columns(DGVPurchaseItems.Columns.Count - 1).Visible = False
            DGVPurchaseItems.Columns(DGVPurchaseItems.Columns.Count - 2).Visible = False
        End If
        txtNo.Text = IIf(DGVPurchaseItems.Rows.Count = 0, 1, DGVPurchaseItems.Rows.Count + 1)
    End Sub
    Private Sub btnSearch_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnSearch.Click
        Dim mainData = linq_obj.SP_Select_All_Tbl_InwardStockMaster().Where(Function(t) t.BillDate > dtStartDate.Value And t.BillDate < dtEndDate.Value).ToList()
        Dim dt As New DataTable
        dt.Columns.Add("Bill No")
        dt.Columns.Add("Bill Date")
        dt.Columns.Add("Company Name")
        For Each item As SP_Select_All_Tbl_InwardStockMasterResult In mainData
            dt.Rows.Add(item.BillNo, item.BillDate, item.Name)
        Next
        GDVInwardDetail.DataSource = dt
    End Sub
    Private Sub cmbCategory_SelectionChangeCommitted(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cmbCategory.SelectionChangeCommitted
        If cmbCategory.SelectedValue > 0 Then
            PRID = cmbCategory.SelectedValue
            Dim rowMaterial = linq_obj.SP_Select_All_RowMaterialMaster(PRID).ToList()
            cmbRowMaterial.DataSource = rowMaterial
            cmbRowMaterial.DisplayMember = "RowMaterialName"
            cmbRowMaterial.ValueMember = "Pk_RowMaterialId"
            cmbRowMaterial.AutoCompleteMode = AutoCompleteMode.Append
            cmbRowMaterial.DropDownStyle = ComboBoxStyle.DropDownList
            cmbRowMaterial.AutoCompleteSource = AutoCompleteSource.ListItems
        End If
    End Sub
    Private Sub btnAdd_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnAdd.Click
        Dim dr As DataRow
        dr = tblItem.NewRow()
        dr("SrNo") = txtNo.Text
        dr("Category") = cmbCategory.Text
        dr("Row Material Name") = cmbRowMaterial.Text
        dr("Quantity") = txtQty.Text
        dr("Unit") = txtUnit.Text
        dr("Fk_Category") = cmbCategory.SelectedValue
        dr("Fk_RowMaterial") = cmbRowMaterial.SelectedValue
        tblItem.Rows.Add(dr)
        DGVPurchaseItems.DataSource = tblItem
        Dim columncount As Integer
        columncount = DGVPurchaseItems.ColumnCount
        DGVPurchaseItems.Columns(columncount - 1).Visible = False
        DGVPurchaseItems.Columns(columncount - 2).Visible = False
        txtNo.Text = IIf(DGVPurchaseItems.Rows.Count = 0, 1, DGVPurchaseItems.Rows.Count + 1)
        subClear()
    End Sub
    Private Sub InwardRegister_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
        tblItem.Columns.Add("SrNo")
        tblItem.Columns.Add("Category")
        tblItem.Columns.Add("Row Material Name")
        tblItem.Columns.Add("Quantity")
        tblItem.Columns.Add("Unit")
        tblItem.Columns.Add("Fk_Category")
        tblItem.Columns.Add("Fk_RowMaterial")
    End Sub
    Public Sub subClear()
        ' txtNo.Text = ""
        cmbCategory.SelectedIndex = 0
        txtUnit.Text = ""
        txtQty.Text = ""

    End Sub
    Public Sub clear()
        txtAddress.Text = ""
        txtBillNo.Text = ""
        txtCompanyName.Text = ""
        txtLastName.Text = ""
        txtNo.Text = ""
        txtPONo.Text = ""
        txtQty.Text = ""
        txtUnit.Text = ""

    End Sub
    Private Sub GDVInwardDetail_DoubleClick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles GDVInwardDetail.DoubleClick
        If (Me.GDVInwardDetail.SelectedCells(0).Value > 0) Then
            InwardId = Convert.ToInt64(Me.GDVInwardDetail.SelectedCells(0).Value)
            bindItemGrid()
            Dim inwardData = linq_obj.SP_Select_Tbl_InwardStockMaster_ById(InwardId).ToList()
            If (inwardData.Count > 0) Then
                txtAddress.Text = Convert.ToString(inwardData(0).Address)
                txtCompanyName.Text = Convert.ToString(inwardData(0).Name)
                txtBillNo.Text = Convert.ToString(inwardData(0).BillNo)
                dtBillDate.Value = Convert.ToString(inwardData(0).BillDate)
                txtPONo.Text = Convert.ToString(inwardData(0).PONo)
                dtInwardDate.Value = Convert.ToString(inwardData(0).InwardDate)
            End If
            If (InwardId > 0) Then
                btnSave.Enabled = False
            Else
                btnSave.Enabled = True
            End If
        End If

    End Sub
    Private Sub btnNew_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnNew.Click
        subClear()
    End Sub
    Private Sub DGVPurchaseItems_DoubleClick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles DGVPurchaseItems.DoubleClick
        Dim result As DialogResult = MessageBox.Show("Are You Sure Delete Quotation?", "Important Message", MessageBoxButtons.YesNo, MessageBoxIcon.Exclamation)
        If result = DialogResult.Yes Then
            If Me.DGVPurchaseItems.SelectedRows.Count > 0 Then
                tblItem.Rows.RemoveAt(Convert.ToInt64(Me.DGVPurchaseItems.CurrentCell.RowIndex))
                DGVPurchaseItems.DataSource = tblItem
                txtNo.Text = IIf(DGVPurchaseItems.Rows.Count = 0, 1, DGVPurchaseItems.Rows.Count + 1)
                'MessageBox.Show("Delete Quotation Successfully..")
            End If
        End If
    End Sub
    Private Sub btnDelete_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnDelete.Click
        If (InwardId > 0) Then
            Dim result As DialogResult = MessageBox.Show("Are You Sure Delete Quotation?", "Important Message", MessageBoxButtons.YesNo, MessageBoxIcon.Exclamation)
            If result = DialogResult.Yes Then
                Dim res As Integer
                res = linq_obj.SP_Delete_Tbl_InwardStockMaster(InwardId)
                MessageBox.Show("Delete Quotation Successfully..")
            End If
        Else
            MessageBox.Show("No Data Selected!!!")
        End If



    End Sub
    Private Sub btnAddNew_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnAddNew.Click
        clear()
        tblItem.Clear()
        DGVPurchaseItems.DataSource = tblItem

    End Sub
    Private Sub btnChange_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnChange.Click
        If (InwardId > 0) Then
            Dim res As Integer
            'get a address id
            Dim addressRes = linq_obj.SP_GetAddressByName(txtAddress.Text, txtCompanyName.Text).ToList()
            If (addressRes.Count > 0) Then
                If txtBillNo.Text.Trim() <> "" Then
                    res = linq_obj.SP_Update_Tbl_InwardStockMaster(addressRes(0).Pk_AddressID, txtPONo.Text, dtInwardDate.Value, txtBillNo.Text, dtBillDate.Value, InwardId)
                    If (res >= 0) Then
                        linq_obj.SP_Delete_Tbl_InwardDetail(InwardId)
                        'insert into Followup Details
                        For i As Integer = 0 To tblItem.Rows.Count - 1
                            linq_obj.SP_Insert_Tbl_InwardDetail(Convert.ToInt64(tblItem.Rows(i)("Fk_Category")), Convert.ToInt64(tblItem.Rows(i)("Fk_RowMaterial")), InwardId, Convert.ToInt64(tblItem.Rows(i)("Quantity")), tblItem.Rows(i)("Unit"))
                        Next
                        MessageBox.Show("Successfully Updated")
                        clear()
                        tblItem.Clear()
                        bindGrid()
                    End If
                End If
            Else
                MessageBox.Show("No Address Detail Found")
            End If
        Else
            MessageBox.Show("No Record For Updations")

        End If
    End Sub
    Public Sub AutoCompated_Text()
        Dim Getadd = linq_obj.SP_Get_AddressList().ToList()
        For Each iteam As SP_Get_AddressListResult In Getadd
            txtCompanyName.AutoCompleteCustomSource.Add(iteam.Name)
            txtAddress.AutoCompleteCustomSource.Add(iteam.Address)

        Next
    End Sub
    Private Sub btnCancel_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCancel.Click
        clear()
        tblItem.Clear()
        DGVPurchaseItems.DataSource = tblItem

    End Sub
    Private Sub btnSave_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnSave.Click
        Dim res As Integer
        'get a address id
        Dim addressRes = linq_obj.SP_GetAddressByName(txtAddress.Text, txtCompanyName.Text).ToList()
        If (addressRes.Count > 0) Then
            If txtBillNo.Text.Trim() <> "" Then
                res = linq_obj.SP_Insert_Tbl_InwardStockMaster(addressRes(0).Pk_AddressID, txtPONo.Text, dtInwardDate.Value, txtBillNo.Text, dtBillDate.Value)
                If (res > 0) Then
                    linq_obj.SP_Delete_Enq_FollowDetails(res)
                    'insert into Followup Details
                    For i As Integer = 0 To tblItem.Rows.Count - 1
                        linq_obj.SP_Insert_Tbl_InwardDetail(Convert.ToInt64(tblItem.Rows(i)("Fk_Category")), Convert.ToInt64(tblItem.Rows(i)("Fk_RowMaterial")), res, Convert.ToInt64(tblItem.Rows(i)("Quantity")), tblItem.Rows(i)("Unit"))
                    Next
                    MessageBox.Show("Successfully Saved")
                End If
            End If
        Else
            MessageBox.Show("No Address Detail Found")
        End If

        bindGrid()
        clear()
        tblItem.Clear()

    End Sub
    Private Sub btnBack_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnBack.Click
        clear()
        tblItem.Clear()
        DGVPurchaseItems.DataSource = tblItem

    End Sub
End Class