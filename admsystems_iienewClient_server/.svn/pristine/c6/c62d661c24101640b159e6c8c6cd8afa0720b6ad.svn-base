Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Drawing
Imports System.Linq
Imports System.Text
Imports System.Windows.Forms
Imports System.Data.SqlClient
Imports System.IO

Public Class UserMaster
    Private con1 As SqlConnection
    Private cmd As SqlCommand
    Private dr As SqlDataReader
    Private da As SqlDataAdapter
    Private ds As DataSet

    Shared Path11 As String
    Public UserID As Int32
    Shared signPath1 As String


    Private Sub DataGridView1_CellContentClick(ByVal sender As System.Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs)

    End Sub
    Public Sub New()
        InitializeComponent()
        con1 = Class1.con
        GvUser_Bind()
        AutoDesignation()


    End Sub
    Public Sub AutoDesignation()

        Dim desg As String
        desg = "select * from User_Master"
        da = New SqlDataAdapter(desg, con1)
        ds = New DataSet()
        da.Fill(ds)
        For Each dr1 As DataRow In ds.Tables(0).Rows
            txtDesignation.AutoCompleteCustomSource.Add(dr1.Item("Designation").ToString())
        Next
    End Sub



    Private Sub btnBrowse_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnBrowse.Click

        Dim openFileDialog1 As New OpenFileDialog
        Dim imgSrc As String
        Dim imgPath As String


        openFileDialog1.ShowDialog()
        imgSrc = openFileDialog1.FileName.ToString()
        signPath1 = (Path.GetDirectoryName(Application.ExecutablePath) & "\Sign\") + openFileDialog1.SafeFileName
        PictureSignature.ImageLocation = imgSrc
        PictureSignature.Text = imgSrc
        signPath1 = openFileDialog1.FileName
    End Sub
    Public Sub GvUser_Bind()
        Dim user12 As String
        user12 = "select Pk_UserID as ID,FirstName,LastName from User_Master"
        da = New SqlDataAdapter(user12, con1)
        ds = New DataSet()
        da.Fill(ds)
        GvUser.DataSource = ds.Tables(0)
        da.Dispose()
        ds.Dispose()




    End Sub

    Private Sub btnSave_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnSave.Click

        Dim user_insert As String
        Try


            validation_Text()
            If signPath1.ToString() <> "" Then
                con1.Open()
                user_insert = "insert into User_Master (FirstName,LastName,UserName,Password1,Designation,Signature,Path,CreateDate,Status) values('" + txtfname.Text + "','" + txtlname.Text + "','" + txtUserName.Text + "','" + txtPassword.Text + "','" + txtDesignation.Text + "','" + signPath1 + "','" + txtPath.Text + "','" + DateTime.Now.Date + "','0')"
                cmd = New SqlCommand(user_insert, con1)
                cmd.ExecuteNonQuery()
                cmd.Dispose()
                con1.Close()

                MessageBox.Show("Add User Successfully..")
                SetClean()
                Path11 = ""
                PictureSignature.Image = Nothing


            Else
                MessageBox.Show("Please Select Signature..")

            End If
            GvUser_Bind()


        Catch ex As Exception
            'MessageBox.Show(ex.Message)
        End Try
    End Sub
    Public Sub SetClean()
        txtfname.Text = ""
        txtlname.Text = ""
        txtUserName.Text = ""
        txtPassword.Text = ""
        txtConformPwd.Text = ""
        txtDesignation.Text = ""
        txtPath.Text = ""

    End Sub

    Private Sub txtUserName_Leave(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtUserName.Leave


        Try
            con1.Open()
            Dim str As String = "select * from User_Master where UserName='" + txtUserName.Text + "'"
            cmd = New SqlCommand(str, con1)
            dr = cmd.ExecuteReader()
            If (dr.HasRows) Then
                MessageBox.Show("This UserName Already Used..")

            End If
            con1.Close()


        Catch ex As Exception
            MessageBox.Show(ex.Message)
        End Try
    End Sub

    Private Sub txtConformPwd_Leave(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtConformPwd.Leave
        If (txtPassword.Text.Trim() <> txtConformPwd.Text.Trim()) Then
            MessageBox.Show("Conform Password Not Match...")

        End If

    End Sub

    Private Sub btnSearch_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnSearch.Click
        Dim user12 As String
        user12 = "select Pk_UserID as ID,FirstName,LastName from User_Master where FirstName='" + txtFirstNameSearch.Text.Trim() + "' or UserName='" + txtUserNameSeach.Text.Trim() + "' "
        da = New SqlDataAdapter(user12, con1)
        ds = New DataSet()
        da.Fill(ds)
        GvUser.DataSource = ds.Tables(0)
        da.Dispose()
        ds.Dispose()
    End Sub

    Private Sub GvUser_DoubleClick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles GvUser.DoubleClick






    End Sub

    Private Sub GvUser_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles GvUser.Click
        UserID = DirectCast(GvUser(0, Convert.ToInt32(GvUser.CurrentRow.Index)).Value, Int32)
        Try


            con1.Open()
            Dim userdata As String
            userdata = "select * from User_Master where Pk_UserId=" & Convert.ToInt32(UserID) & ""
            cmd = New SqlCommand(userdata, con1)
            dr = cmd.ExecuteReader()
            dr.Read()
            txtfname.Text = dr("FirstName").ToString()
            txtlname.Text = dr("LastName").ToString()
            txtUserName.Text = dr("UserName").ToString()
            txtPassword.Text = dr("Password1").ToString()
            txtConformPwd.Text = dr("Password1").ToString()
            txtDesignation.Text = dr("Designation").ToString()
            txtPath.Text = dr("Path").ToString()
            Path11 = dr("Signature").ToString()
            con1.Close()
        Catch ex As Exception
            MessageBox.Show(ex.Message)

        End Try
    End Sub
    Public Sub validation_Text()

        txtfname.BackColor = System.Drawing.Color.White
        txtfname.ForeColor = System.Drawing.Color.Black

        txtlname.BackColor = System.Drawing.Color.White
        txtlname.ForeColor = System.Drawing.Color.Black

        txtUserName.BackColor = System.Drawing.Color.White
        txtUserName.ForeColor = System.Drawing.Color.Black

        txtPassword.BackColor = System.Drawing.Color.White
        txtPassword.ForeColor = System.Drawing.Color.Black


        txtConformPwd.BackColor = System.Drawing.Color.White
        txtConformPwd.ForeColor = System.Drawing.Color.Black

        txtDesignation.BackColor = System.Drawing.Color.White
        txtDesignation.ForeColor = System.Drawing.Color.Black

        txtPath.BackColor = System.Drawing.Color.White
        txtPath.ForeColor = System.Drawing.Color.Black



        If (txtfname.Text.Trim() = "") Then
            txtfname.BackColor = System.Drawing.Color.Red

            Dim exc As New Exception("First Name Can Not Be Blank")
            txtfname.ForeColor = System.Drawing.Color.White
            txtfname.Focus()
            Throw exc

        End If
        If (txtlname.Text.Trim() = "") Then
            txtlname.BackColor = System.Drawing.Color.Red
            Dim exc As New Exception("Last Name CanNot Be Blank")
            txtlname.ForeColor = System.Drawing.Color.White
            txtlname.Focus()
            Throw exc

        End If
        If (txtUserName.Text.Trim() = "") Then
            txtUserName.BackColor = System.Drawing.Color.Red
            Dim exc As New Exception("USer Name CanNot Be Blank")
            txtUserName.ForeColor = System.Drawing.Color.White
            txtUserName.Focus()
            Throw exc

        End If
        If (txtPassword.Text.Trim() = "") Then
            txtPassword.BackColor = System.Drawing.Color.Red
            Dim exc As New Exception("Password CanNot Be Blank")
            txtPassword.ForeColor = System.Drawing.Color.White
            txtPassword.Focus()
            Throw exc

        End If
        If (txtConformPwd.Text.Trim() = "") Then
            txtConformPwd.BackColor = System.Drawing.Color.Red
            Dim exc As New Exception("Conform Password CanNot Be Blank")
            txtConformPwd.ForeColor = System.Drawing.Color.White
            txtConformPwd.Focus()
            Throw exc

        End If

        If (txtDesignation.Text.Trim() = "") Then
            txtDesignation.BackColor = System.Drawing.Color.Red
            Dim exc As New Exception("Designation CanNot Be Blank")
            txtDesignation.ForeColor = System.Drawing.Color.White
            txtDesignation.Focus()
            Throw exc

        End If

        If (txtPath.Text.Trim() = "") Then
            txtPath.BackColor = System.Drawing.Color.Red
            Dim exc As New Exception("Folder Path CanNot Be Blank")
            txtPath.ForeColor = System.Drawing.Color.White
            txtPath.Focus()
            Throw exc

        End If

    End Sub

    Private Sub btnUpdate_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnUpdate.Click

        Dim user_update As String
        Try
            validation_Text()
            con1.Open()
            If Path11.ToString() <> "" Then
                user_update = "update User_Master Set FirstName='" + txtfname.Text + "',LastName='" + txtlname.Text + "',UserName='" + txtUserName.Text + "',Password1='" + txtPassword.Text + "',Designation='" + txtDesignation.Text + "',Signature='" + Path11 + "',Path='" + txtPath.Text + "' where Pk_UserId=" & UserID & " "
            Else
                user_update = "update User_Master Set FirstName='" + txtfname.Text + "',LastName='" + txtlname.Text + "',UserName='" + txtUserName.Text + "',Password1='" + txtPassword.Text + "',Designation='" + txtDesignation.Text + "',Path='" + txtPath.Text + "' where Pk_UserId=" & UserID & " "
            End If
            cmd = New SqlCommand(user_update, con1)
            cmd.ExecuteNonQuery()
            cmd.Dispose()
            MessageBox.Show("Update Record Successfully..")
            SetClean()
            Path11 = ""
            PictureSignature.Image = Nothing
            con1.Close()
        Catch ex As Exception
            'MessageBox.Show(ex.Message)
        End Try
        GvUser_Bind()


    End Sub

    Private Sub BtnNew_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles BtnNew.Click
        SetClean()
        UserID = 0
    End Sub
End Class