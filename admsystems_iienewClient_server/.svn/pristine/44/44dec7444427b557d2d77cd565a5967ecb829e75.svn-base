
Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Drawing
Imports System.Linq
Imports System.Text
Imports System.Windows.Forms
Imports System.Data.SqlClient
Public Class AddressForm
    Dim linq_obj As New RoErpDataContext(System.Configuration.ConfigurationManager.AppSettings("constr").ToString())
    Dim Address_ID As Integer
    Public Sub New()
        ' This call is required by the designer.
        InitializeComponent()
        AutoCompated_Text()
        ddlEnqType_Bind()
        ddlCategory_Bind()
        ddlSubCategory_Bind()
        ddlEnqStatus_Bind()
        GvAddress_Bind()
        If (Address_ID <= 0) Then
            Button_Status()
            btnSubmit.Visible = True
        Else
            Button_Status()
            btnUpdate.Visible = True
        End If
        RavSoft.CueProvider.SetCue(txtEmail1, "Email 1")
        RavSoft.CueProvider.SetCue(txtEmail2, "Email 2")
    End Sub
    Public Sub AutoCompated_Text()

        Dim Getadd = linq_obj.SP_Get_AddressList().ToList()
        For Each iteam As SP_Get_AddressListResult In Getadd
            txtName.AutoCompleteCustomSource.Add(iteam.Name)
            txtArea.AutoCompleteCustomSource.Add(iteam.Area)
            txtCity.AutoCompleteCustomSource.Add(iteam.City)
            txtState.AutoCompleteCustomSource.Add(iteam.State)
            txtDistrict.AutoCompleteCustomSource.Add(iteam.District)
            'Search Filter
            txtSearchName.AutoCompleteCustomSource.Add(iteam.Name)
            txtSearchCity.AutoCompleteCustomSource.Add(iteam.City)
            txtSearchDistrict.AutoCompleteCustomSource.Add(iteam.District)
        Next
    End Sub
    Public Sub ddlEnqType_Bind()
        ddlEnqType.Items.Clear()
        Dim Enq = linq_obj.SP_Get_EnqTypeList().ToList()
        ddlEnqType.DataSource = Enq
        ddlEnqType.DisplayMember = "EnqType"
        ddlEnqType.ValueMember = "Pk_EnqTypeID"
        ddlEnqType.AutoCompleteMode = AutoCompleteMode.Append
        ddlEnqType.DropDownStyle = ComboBoxStyle.DropDownList
        ddlEnqType.AutoCompleteSource = AutoCompleteSource.ListItems
    End Sub

    Public Sub ddlCategory_Bind()
        ddlCategory.Items.Clear()
        Dim category = linq_obj.SP_Get_AddressCategory().ToList()
        ddlCategory.DataSource = category
        ddlCategory.DisplayMember = "Category"
        ddlCategory.ValueMember = "Pk_AddressCategoryID"
        ddlCategory.AutoCompleteMode = AutoCompleteMode.Append
        ddlCategory.DropDownStyle = ComboBoxStyle.DropDownList
        ddlCategory.AutoCompleteSource = AutoCompleteSource.ListItems
        For Each iteam As SP_Get_AddressCategoryResult In category
            txtSearchCategory.AutoCompleteCustomSource.Add(iteam.Category)
        Next


    End Sub
    Public Sub ddlSubCategory_Bind()

        ddlSubcategory.Items.Clear()

        Dim subcategory = linq_obj.SP_Get_AddSubCategory().ToList()

        ddlSubcategory.DataSource = subcategory
        ddlSubcategory.DisplayMember = "SubCategory"
        ddlSubcategory.ValueMember = "Pk_AddressSubID"
        ddlSubcategory.AutoCompleteMode = AutoCompleteMode.Append
        ddlSubcategory.DropDownStyle = ComboBoxStyle.DropDownList
        ddlSubcategory.AutoCompleteSource = AutoCompleteSource.ListItems





    End Sub
    Public Sub ddlEnqStatus_Bind()

        ddlEnqStatus.Items.Clear()
        Dim EnqStatus = linq_obj.SP_Get_EnqStatusList().ToList()
        ddlEnqStatus.DataSource = EnqStatus
        ddlEnqStatus.DisplayMember = "EnqStatus"
        ddlEnqStatus.ValueMember = "Pk_EnqStatus"
        ddlEnqStatus.AutoCompleteMode = AutoCompleteMode.Append
        ddlEnqStatus.DropDownStyle = ComboBoxStyle.DropDownList
        ddlEnqStatus.AutoCompleteSource = AutoCompleteSource.ListItems
    End Sub

    Public Sub GvAddress_Bind()

        Dim dt As New DataTable
        dt.Columns.Add("PKID")
        dt.Columns.Add("Category")
        dt.Columns.Add("SubCategory")
        dt.Columns.Add("Name")

        Try
            Dim getdata = linq_obj.SP_Get_AddressList().ToList()
            For Each item As SP_Get_AddressListResult In getdata
                dt.Rows.Add(item.Pk_AddressID, item.Category, item.SubCategory, item.Name)
                txtEntryNo.Text = item.Pk_AddressID + 1

            Next

            GvAddress.DataSource = dt
            GvAddress.Columns(0).Visible = False
            Dim entryno = linq_obj.SP_Get_AddressList().Count()
            txtEntryNo.Text = entryno + 1
        Catch ex As Exception
        End Try

    End Sub
    Public Sub Button_Status()
        btnSubmit.Visible = False
        btnUpdate.Visible = False
    End Sub

    Private Sub btnSubmit_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnSubmit.Click
        Try
            linq_obj.SP_Insert_Update_Address_Master(0, ddlEnqType.SelectedValue, txtEnqNo.Text, ddlCategory.SelectedValue, ddlSubcategory.SelectedValue, txtName.Text, txtAddress.Text, txtArea.Text, txtCity.Text, txtPincode.Text, txtTaluka.Text, txtDistrict.Text, txtState.Text, txtContactPerson.Text, txtLandlineNo.Text, txtmobileno.Text, txtEmail.Text, txtEmail1.Text, txtEmail2.Text, txtRemark.Text, txtEnqDate.Text, txtCreateDate.Text, ddlEnqStatus.SelectedValue, txtReference.Text, txtReference2.Text, txtEnqType.Text, txtEnqAttendBy.Text, txtenquiryfor.Text, txtCapacity.Text, txtDelAddress.Text, txtDelArea.Text, txtDelCity.Text, txtDelPincode.Text, txtDelTaluka.Text, txtDelDistrict.Text, txtDelState.Text)
            linq_obj.SubmitChanges()
            'linq_obj.sp_Insert_Quotation_Master("", ddlEnqType.Text,0,txtEnqNo.Text,
            'linq_obj.SubmitChanges()

            GvAddress_Bind()
            SetClean()

            MessageBox.Show("Submit Sucessfully.....")

        Catch ex As Exception

        End Try
    End Sub
    Public Sub SetClean()
        txtEnqNo.Text = ""
        txtName.Text = ""
        txtAddress.Text = ""
        txtArea.Text = ""
        txtCity.Text = ""
        txtPincode.Text = ""
        txtTaluka.Text = ""
        txtDistrict.Text = ""
        txtState.Text = ""
        txtEmail1.Text = ""
        txtEmail2.Text = ""
        txtDelAddress.Text = ""
        txtDelArea.Text = ""
        txtDelCity.Text = ""
        txtDelPincode.Text = ""
        txtDelTaluka.Text = ""
        txtDelDistrict.Text = ""
        txtDelState.Text = ""
        txtContactPerson.Text = ""
        txtLandlineNo.Text = ""
        txtEmail.Text = ""
        txtRemark.Text = ""
        txtEnqDate.Text = ""
        txtCreateDate.Text = ""
        txtmobileno.Text = ""
        txtReference.Text = ""
        txtReference2.Text = ""
        txtEnqType.Text = ""
        txtEnqAttendBy.Text = ""
        txtenquiryfor.Text = ""
        txtCapacity.Text = ""



    End Sub

    Private Sub btnUpdate_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnUpdate.Click
        Try
            linq_obj.SP_Insert_Update_Address_Master(Address_ID, ddlEnqType.SelectedValue, txtEnqNo.Text, ddlCategory.SelectedValue, ddlSubcategory.SelectedValue, txtName.Text, txtAddress.Text, txtArea.Text, txtCity.Text, txtPincode.Text, txtTaluka.Text, txtDistrict.Text, txtState.Text, txtContactPerson.Text, txtLandlineNo.Text, txtmobileno.Text, txtEmail.Text, txtEmail1.Text, txtEmail2.Text, txtRemark.Text, txtEnqDate.Text, txtCreateDate.Text, ddlEnqStatus.SelectedValue, txtReference.Text, txtReference2.Text, txtEnqType.Text, txtEnqAttendBy.Text, txtenquiryfor.Text, txtCapacity.Text, txtDelAddress.Text, txtDelArea.Text, txtDelCity.Text, txtDelPincode.Text, txtDelTaluka.Text, txtDelDistrict.Text, txtDelState.Text)
            linq_obj.SubmitChanges()
            GvAddress_Bind()
            SetClean()
            MessageBox.Show("Update Sucessfully.....")
        Catch ex As Exception

        End Try
    End Sub
    Public Sub bindData()
        Try
            'lblHeader.Text = "Edit Address"

            Button_Status()
            btnUpdate.Visible = True


            Address_ID = Convert.ToInt32(Me.GvAddress.SelectedCells(0).Value)
            Dim address_get = linq_obj.SP_Get_AddressList().Where(Function(c) c.Pk_AddressID = Address_ID).ToList()
            For Each item As SP_Get_AddressListResult In address_get
                ddlEnqType.SelectedValue = item.FK_EnqTypeID
                ddlCategory.SelectedValue = item.FK_CategoryID
                ddlSubcategory.SelectedValue = item.FK_SubCategoryID
                txtEnqNo.Text = item.EnqNo
                txtName.Text = item.Name
                txtAddress.Text = item.Address
                txtArea.Text = item.Area
                txtCity.Text = item.City
                txtPincode.Text = item.Pincode
                txtTaluka.Text = item.Taluka
                txtDistrict.Text = item.District
                txtState.Text = item.State
                txtContactPerson.Text = item.ContactPerson
                txtLandlineNo.Text = item.LandlineNo
                txtmobileno.Text = item.MobileNo
                txtEmail.Text = item.EmailID
                txtRemark.Text = item.Remark
                txtEnqDate.Text = item.EnqDate
                txtCreateDate.Text = item.CreateDate
                ddlEnqStatus.SelectedValue = item.EnqStatus
                txtEmail1.Text = item.EmailID1
                txtEmail2.Text = item.EmailID2
                txtDelAddress.Text = item.DeliveryAddress
                txtDelArea.Text = item.DeliveryArea
                txtDelState.Text = item.DeliveryState
                txtDelDistrict.Text = item.DeliveryDistrict
                txtDelCity.Text = item.DeliveryCity
                txtDelPincode.Text = item.DeliveryPincode
                txtDelTaluka.Text = item.DeliveryTaluka

            Next

        Catch ex As Exception
            MessageBox.Show(ex.Message)
        End Try

    End Sub
    Private Sub GvAddress_DoubleClick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles GvAddress.DoubleClick
     
        bindData()
    End Sub

    Private Sub btnCancel_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCancel.Click
        SetClean()
        Button_Status()
        btnSubmit.Visible = True
        'lblHeader.Text = "Add Address"
    End Sub

    Private Sub btnSearch_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnSearch.Click

        Dim dt As New DataTable
        dt.Columns.Add("PKID")
        dt.Columns.Add("Category")
        dt.Columns.Add("SubCategory")
        dt.Columns.Add("Name")

        Try

            If txtSearchName.Text.Trim() <> "" Then
                Dim getName = linq_obj.SP_Get_AddressList().Where(Function(t) t.Name = txtSearchName.Text.Trim()).ToList()
                For Each item As SP_Get_AddressListResult In getName
                    dt.Rows.Add(item.Pk_AddressID, item.Category, item.SubCategory, item.Name)

                Next
            ElseIf txtSearchAddCategory.Text.Trim() <> "" Then
                txtSearchCategory.Text = ""

                Dim str() As String
                str = txtSearchAddCategory.Text.Split(",")

                For i = 0 To str.Length - 1
                    Dim getCategory = linq_obj.SP_Get_AddressList().Where(Function(t) t.Category = str(i)).ToList()
                    For Each item As SP_Get_AddressListResult In getCategory
                        dt.Rows.Add(item.Pk_AddressID, item.Category, item.SubCategory, item.Name)

                    Next
                Next

            ElseIf txtState.Text <> "" Then
                Dim getState = linq_obj.SP_Get_AddressList().Where(Function(t) t.State = txtSearchState.Text.Trim()).ToList()
                For Each item As SP_Get_AddressListResult In getState
                    dt.Rows.Add(item.Pk_AddressID, item.Category, item.SubCategory, item.Name)

                Next
            ElseIf txtSearchDistrict.Text.Trim() <> "" Then
                Dim getDistrict = linq_obj.SP_Get_AddressList().Where(Function(t) t.District = txtSearchDistrict.Text.Trim()).ToList()
                For Each item As SP_Get_AddressListResult In getDistrict
                    dt.Rows.Add(item.Pk_AddressID, item.Category, item.SubCategory, item.Name)

                Next
            ElseIf txtSearchCity.Text.Trim() <> "" Then
                Dim getDistrict = linq_obj.SP_Get_AddressList().Where(Function(t) t.City = txtSearchCity.Text.Trim()).ToList()
                For Each item As SP_Get_AddressListResult In getDistrict
                    dt.Rows.Add(item.Pk_AddressID, item.Category, item.SubCategory, item.Name)

                Next

            ElseIf ddlFilter.Text = "State Excluding Gujarat" Then
                Dim getstateex = linq_obj.SP_Get_AddressList().Where(Function(t) t.State <> "Gujarat").ToList()
                For Each item As SP_Get_AddressListResult In getstateex
                    dt.Rows.Add(item.Pk_AddressID, item.Category, item.SubCategory, item.Name)

                Next
            ElseIf ddlFilter.Text = "Gujarat Excluding Ahmedabad" Then
                Dim getDistrict = linq_obj.SP_Get_AddressList().Where(Function(t) t.City <> "Ahmedabad").ToList()
                For Each item As SP_Get_AddressListResult In getDistrict
                    dt.Rows.Add(item.Pk_AddressID, item.Category, item.SubCategory, item.Name)

                Next

            End If

        Catch ex As Exception

        End Try

        GvAddress.DataSource = dt
        GvAddress.Columns(0).Visible = False
    End Sub

    Private Sub btnAddCategory_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnAddCategory.Click

        txtSearchAddCategory.Text = txtSearchAddCategory.Text + txtSearchCategory.Text + ","
        txtSearchCategory.Text = ""



    End Sub

    Private Sub GvAddress_CellDoubleClick(ByVal sender As System.Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles GvAddress.CellDoubleClick


    End Sub

    Private Sub btnfind_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnfind.Click
        Dim criteria As String
        criteria = " Where "
        If txtSearchName.Text.Trim() <> "" Then
            criteria = criteria + " Name like '%" + txtSearchName.Text + "%' and"
        End If
        If txtSearchState.Text.Trim() <> "" Then
            criteria = criteria + " State like '%" + txtSearchState.Text + "%' and"
        End If
        If txtSearchDistrict.Text.Trim() <> "" Then
            criteria = criteria + " District like '%" + txtSearchDistrict.Text + "%' and"
        End If
        If txtSearchCity.Text.Trim() <> "" Then
            criteria = criteria + " City like '%" + txtSearchCity.Text + "%' and"
        End If
        If ddlFilter.Text = "State Excluding Gujarat" Then
            criteria = criteria + " State<>'Gujarat' and"
        End If
        If ddlFilter.Text = "Gujarat Excluding Ahmedabad" Then
            criteria = criteria + " City<>'Ahmedabad' and"
        End If

        If txtSearchAddCategory.Text.Trim() <> "" Then
            Dim strArray() As String
            strArray = txtSearchAddCategory.Text.Split(",")
            For i As Integer = 0 To strArray.Length - 2
                If strArray.ToString().Trim() <> "" Then
                    criteria = criteria + " Category like '" + strArray(i) + "' and"
                End If

            Next
        End If

        If criteria = " Where " Then
            criteria = ""
        End If

        If (criteria.Length > 0) Then
            criteria = criteria.ToString().Substring(0, criteria.Length - 3)
        End If

        Dim cmd As New SqlCommand
        cmd.CommandText = "SP_Search_AddressMaster"
        cmd.Parameters.Add("@criteria", SqlDbType.VarChar).Value = criteria
        Dim objclass As New Class1

        Dim ds As New DataSet
        ds = objclass.GetSearchData(cmd)
        If ds.Tables(0).Rows.Count < 1 Then
            MessageBox.Show("Record Not Found", "No Records", MessageBoxButtons.OK, MessageBoxIcon.Information)
        End If
        GvAddress.DataSource = ds.Tables(0)

    End Sub

    Private Sub btnclearCategory_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnclearCategory.Click
        txtSearchAddCategory.Text = ""
    End Sub

    Private Sub txtName_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtName.TextChanged

    End Sub

    Private Sub GvAddress_PreviewKeyDown(ByVal sender As System.Object, ByVal e As System.Windows.Forms.PreviewKeyDownEventArgs) Handles GvAddress.PreviewKeyDown
        bindData()
    End Sub
End Class